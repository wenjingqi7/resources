'''
    with open('dic_flag', 'r+') as f2:
        for everyline in f2:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == 'INT_R_X25Y63 SE6END3'):  # 找start的邻接点
                outdegree_start = everyline[n1 + 3]
                everyline=everyline.replace('1','0')
                return
'''

'''
# 第一条路径
def DFS(start,end,listpath):
    print('listpath',listpath)
    list1 = []
    list2 = []
    if (start == end):
        return
    else:
        graph_start = []
        find_graph(start, graph_start)   #索引start的邻接点
        #print(start)
        #print('list',graph_start)
        for y in graph_start:  # 结点的相邻结点遍历
            flag_y = find_flag(y)     #查找节点的flag
            outdegree = find_outdegree(y)  # 寻找邻接点的出度，int类型
            #print(flag_y)
            #print(outdegree)
            if(y == end):        #如果邻接点中存在end，结束
                listpath.append(y)  #找到end对listpath中数据进行脚本处理
                number = len(listpath)
                with open('result', 'w') as f1:
                    for i in range(0, number):
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                return
            elif (flag_y != 0 and outdegree != 0):  # 寻找未遍历过的点
                #print(y)
                list1.append(y)  # start不包含终点的邻接点写入列表
                list2.append(outdegree)  # 邻接点的出度写入列表
        #print('list1', list1)
        #print('list2', list2)
        if (list1 == []):  # 找不到下一条路径
            list1empty(start, listpath, list1, list2)
            newstart = list1[0]
            listpath.append(newstart)
            DFS(newstart, end, listpath)
        else:
            max_outdegree = max(list2)  # 找出最大出度
            #print('4', max_outdegree)
            p = list2.index(max_outdegree)
            newstart = list1[p]    #最大度对应的点
            restart_n = len(listpath)
            if(restart_n % 400 == 0):     #listpath 长度每400个释放一次
                with open('result', 'w') as f1:
                    for i in range(0,400):    #将listpath 中元素写为脚本格式
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                listpath = []
                find_nextpath(start, newstart,listpath)
                DFS(newstart,end,listpath)
            else:
                # print('5', newstart)
                find_nextpath(start, newstart,listpath)
                DFS(newstart, end, listpath)


#在graph中查找邻接点并将邻接点加入列表graph_start
def find_graph(start,graph_start):
    import sys
    n1 = len(start)
    with open('graph', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == start):  # 找start的邻接点
                lastpart = everyline[n1 + 4:-2]  # 剩余格式'','',''
                #print(lastpart)
                # if ('INT' in lastpart):
                while ('INT' in lastpart):
                    if (',' in lastpart):
                        n2 = lastpart.index(',')
                        graph_start.append(lastpart[1:n2 - 1])
                        lastpart = lastpart[n2 + 1:]
                    else:
                        graph_start.append(lastpart[1:-1])
                        lastpart = 'empty'
                #print("asd",graph_start)
                return graph_start

#在flag中寻找对应的参数
def find_flag(y):
    import sys
    n1 = len(y)
    with open ('flag','r') as f1:
        for everyline in f1:
            everyline =everyline.rstrip()
            if (everyline[1:n1 +1] == y):
                flag_node = everyline[n1+3]  #读取文件中每个node的标记
                return flag_node

#在outdegree中查找对应的参数
def find_outdegree(y):
    import sys
    #print(y)
    n1 = len(y)
    with open('outdegree', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == y):  # 找start的邻接点
                outdegree_z = everyline[n1 + 3]
                outdegree_y = int(outdegree_z)
                #print('outdegree_node',outdegree_y)
                return outdegree_y

#对寻找到的新节点做处理
def find_nextpath(start,newstart,listpath):
    import sys
    listpath.append(newstart)  # 将节点最大度点插入路径
    lastoutdegree = find_outdegree(newstart)   #读取newstart点原始出度
    outdegree_newstart = lastoutdegree -1   #修改newstart出度
    with open ('outdegree','r') as f1:
        data = f1.read()
    with open ('outdegree','w') as f2:
        new_data = data.replace("'" + newstart + "':"+ str(lastoutdegree), "'" + start + "':"+ str(outdegree_newstart))
        f2.write(new_data)

    with open('flag', 'r') as f3:
        data = f3.read()
    with open('flag', 'w') as f4:
        new_data = data.replace("'" + newstart + "':1,", "'" + start + "':0,")
        f4.write(new_data)

#当寻找到的节点邻接点为空时进行处理
def list1empty(start,listpath,list1,list2):
    listpath.remove(start)  # 将空节点从listpath删掉
    newstart = listpath[-1]  # 重新遍历空节点的前一节点
    #print('6',newstart)
    graph_start=[]
    graph_newstart = find_graph(newstart,graph_start)
    #print('graph_newstart',graph_start)
    for y in graph_newstart:
        flag_y = find_flag(y)
        outdegree = find_outdegree(y)
        if (y != start and flag_y != 0 and outdegree != 0):  # 在前节点不包含空节点的邻接点中找下一路径
            list1.append(y)  # start不包含终点的邻接点写入列表
            list2.append(outdegree)  # 邻接点的出度写入列表
    #print('list1', list1)
    #print('list2', list2)
    #print('7', list1)
    if (list1 == []):  # 如果新节点除空节点外无其他节点，新节点也移除
        list1empty(newstart, listpath, list1, list2)
    else:
        return

#主函数
#flag['INT_R_X1Y349 SE6END0'] = 0   #将起始点标记为0
listpath1 = ['INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0']   #将起始点加入路径
#print('path',i)
#graph_start = []
#outdegree_y = 'null'
start = 'INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END01'
end = 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0'

DFS('INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0', 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0', listpath1)
q = listpath1.index('INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0')
print(q/2,'path1')
print(listpath1)
'''
'''
#生成XDL脚本
listpath=['INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0', 'INT_L_X0Y192 SE6BEG0 INT_L_X2Y188 SE6END0', 'INT_L_X2Y188 SE6BEG0 INT_L_X4Y184 SE6END0', 'INT_L_X4Y184 SE6BEG0 INT_L_X6Y180 SE6END0', 'INT_L_X6Y180 SE6BEG0 INT_L_X8Y176 SE6END0', 'INT_L_X8Y176 SE6BEG0 INT_L_X10Y172 SE6END0', 'INT_L_X10Y172 SE6BEG0 INT_L_X12Y168 SE6END0', 'INT_L_X12Y168 SE6BEG0 INT_L_X14Y164 SE6END0', 'INT_L_X14Y164 SE6BEG0 INT_L_X16Y160 SE6END0', 'INT_L_X16Y160 SE6BEG0 INT_L_X24Y156 SE6END0', 'INT_L_X24Y156 SE6BEG0 INT_L_X26Y152 SE6END0', 'INT_L_X26Y152 SE6BEG0 INT_L_X28Y148 SE6END0', 'INT_L_X28Y148 SE6BEG0 INT_L_X30Y144 SE6END0', 'INT_L_X30Y144 SE6BEG0 INT_L_X32Y140 SE6END0', 'INT_L_X32Y140 SE6BEG0 INT_L_X34Y136 SE6END0', 'INT_L_X34Y136 SE6BEG0 INT_L_X36Y132 SE6END0', 'INT_L_X36Y132 SE6BEG0 INT_L_X38Y128 SE6END0', 'INT_L_X38Y128 SE6BEG0 INT_L_X40Y124 SE6END0', 'INT_L_X40Y124 SE6BEG0 INT_L_X42Y120 SE6END0', 'INT_L_X42Y120 SE6BEG0 INT_L_X44Y116 SE6END0', 'INT_L_X44Y116 SE6BEG0 INT_L_X46Y112 SE6END0', 'INT_L_X46Y112 SE6BEG0 INT_L_X48Y108 SE6END0', 'INT_L_X48Y108 SE6BEG0 INT_L_X50Y104 SE6END0', 'INT_L_X50Y104 SE6BEG0 INT_L_X52Y100 SE6END0', 'INT_L_X52Y100 SE6BEG0 INT_L_X54Y96 SE6END0', 'INT_L_X54Y96 SE6BEG0 INT_L_X56Y92 SE6END0', 'INT_L_X56Y92 SE6BEG0 INT_L_X58Y88 SE6END0', 'INT_L_X58Y88 SE6BEG0 INT_L_X60Y84 SE6END0', 'INT_L_X60Y84 SE6BEG0 INT_L_X62Y80 SE6END0', 'INT_L_X62Y80 SE6BEG0 INT_L_X64Y76 SE6END0', 'INT_L_X64Y76 SE6BEG0 INT_L_X66Y72 SE6END0', 'INT_L_X66Y72 SE6BEG0 INT_L_X68Y68 SE6END0', 'INT_L_X68Y68 SE6BEG0 INT_L_X70Y64 SE6END0', 'INT_L_X70Y64 SE6BEG0 INT_L_X72Y60 SE6END0', 'INT_L_X72Y60 SE6BEG0 INT_L_X74Y56 SE6END0', 'INT_L_X74Y56 SE6BEG0 INT_L_X76Y52 SE6END0', 'INT_L_X76Y52 SE6BEG0 INT_L_X78Y48 SE6END0', 'INT_L_X78Y48 SE6BEG0 INT_L_X80Y44 SE6END0', 'INT_L_X80Y44 SE6BEG0 INT_L_X82Y40 SE6END0', 'INT_L_X82Y40 SE6BEG0 INT_L_X84Y36 SE6END0', 'INT_L_X84Y36 SE6BEG0 INT_L_X86Y32 SE6END0', 'INT_L_X86Y32 SE6BEG0 INT_L_X88Y28 SE6END0', 'INT_L_X88Y28 SE6BEG0 INT_L_X90Y24 SE6END0', 'INT_L_X90Y24 SE6BEG0 INT_L_X92Y20 SE6END0', 'INT_L_X92Y20 SE6BEG0 INT_L_X94Y16 SE6END0', 'INT_L_X94Y16 NN6BEG0 INT_L_X94Y22 NN6END0', 'INT_L_X94Y22 NN6BEG0 INT_L_X94Y28 NN6END0', 'INT_L_X94Y28 NN6BEG0 INT_L_X94Y34 NN6END0', 'INT_L_X94Y34 NN6BEG0 INT_L_X94Y40 NN6END0', 'INT_L_X94Y40 NN6BEG0 INT_L_X94Y46 NN6END0', 'INT_L_X94Y46 NN6BEG0 INT_L_X94Y52 NN6END0', 'INT_L_X94Y52 NN6BEG0 INT_L_X94Y58 NN6END0', 'INT_L_X94Y58 NN6BEG0 INT_L_X94Y64 NN6END0', 'INT_L_X94Y64 NN6BEG0 INT_L_X94Y70 NN6END0', 'INT_L_X94Y70 NN6BEG0 INT_L_X94Y76 NN6END0', 'INT_L_X94Y76 NN6BEG0 INT_L_X94Y82 NN6END0', 'INT_L_X94Y82 NN6BEG0 INT_L_X94Y88 NN6END0', 'INT_L_X94Y88 NN6BEG0 INT_L_X94Y94 NN6END0', 'INT_L_X94Y94 NN6BEG0 INT_L_X94Y100 NN6END0', 'INT_L_X94Y100 NN6BEG0 INT_L_X94Y106 NN6END0', 'INT_L_X94Y106 NN6BEG0 INT_L_X94Y112 NN6END0', 'INT_L_X94Y112 NN6BEG0 INT_L_X94Y118 NN6END0', 'INT_L_X94Y118 NN6BEG0 INT_L_X94Y124 NN6END0', 'INT_L_X94Y124 NN6BEG0 INT_L_X94Y130 NN6END0', 'INT_L_X94Y130 NN6BEG0 INT_L_X94Y136 NN6END0', 'INT_L_X94Y136 NN6BEG0 INT_L_X94Y142 NN6END0', 'INT_L_X94Y142 NN6BEG0 INT_L_X94Y148 NN6END0', 'INT_L_X94Y148 SE6BEG0 INT_R_X95Y144 SW6END0', 'INT_R_X95Y144 NW6BEG1 INT_R_X93Y148 NW6END1', 'INT_R_X93Y148 NE6BEG1 INT_R_X95Y147 SE6END2', 'INT_R_X95Y147 NE6BEG2 INT_L_X94Y148 SW6END1', 'INT_L_X94Y148 NW6BEG2 INT_L_X92Y147 SW6END1', 'INT_L_X92Y147 SE6BEG1 INT_L_X94Y143 SE6END1', 'INT_L_X94Y143 NE6BEG1 INT_R_X95Y147 NW6END1', 'INT_R_X95Y147 NE6BEG1 INT_L_X94Y148 SW6END2', 'INT_L_X94Y148 NW6BEG3 INT_L_X92Y147 SW6END0', 'INT_L_X92Y147 SE6BEG0 INT_L_X94Y143 SE6END0', 'INT_L_X94Y143 NN6BEG0 INT_L_X94Y149 NN6END0', 'INT_L_X94Y149 SE6BEG0 INT_R_X95Y145 SW6END0', 'INT_R_X95Y145 NW6BEG1 INT_R_X93Y149 NW6END1', 'INT_R_X93Y149 NE6BEG1 INT_R_X95Y146 SE6END2', 'INT_R_X95Y146 NE6BEG2 INT_L_X94Y149 SW6END1', 'INT_L_X94Y149 NW6BEG2 INT_L_X92Y146 SW6END1', 'INT_L_X92Y146 SE6BEG1 INT_L_X94Y142 SE6END1', 'INT_L_X94Y142 NE6BEG1 INT_R_X95Y146 NW6END1', 'INT_R_X95Y146 NE6BEG1 INT_L_X94Y149 SW6END2', 'INT_L_X94Y149 NW6BEG3 INT_L_X92Y146 SW6END0', 'INT_L_X92Y146 SE6BEG0 INT_L_X94Y142 SE6END0', 'INT_L_X94Y142 SE6BEG0 INT_R_X95Y138 SW6END0', 'INT_R_X95Y138 NW6BEG1 INT_R_X93Y142 NW6END1', 'INT_R_X93Y142 NW6BEG1 INT_R_X91Y146 NW6END1', 'INT_R_X91Y146 NE6BEG1 INT_R_X93Y149 SE6END2', 'INT_R_X93Y149 NE6BEG2 INT_R_X95Y146 SE6END1', 'INT_R_X95Y146 NN6BEG1 INT_R_X95Y147 SS6END2', 'INT_R_X95Y147 NW6BEG3 INT_R_X93Y148 SW6END0', 'INT_R_X93Y148 SE6BEG0 INT_R_X95Y144 SE6END0', 'INT_R_X95Y144 SE6BEG0 INT_L_X94Y140 SW6END0', 'INT_L_X94Y140 NW6BEG1 INT_L_X92Y144 NW6END1', 'INT_L_X92Y144 NW6BEG1 INT_L_X90Y148 NW6END1', 'INT_L_X90Y148 NE6BEG1 INT_L_X92Y147 SE6END2', 'INT_L_X92Y147 NE6BEG2 INT_L_X94Y148 SE6END1', 'INT_L_X94Y148 NE6BEG1 INT_R_X95Y147 SW6END2', 'INT_R_X95Y147 SE6BEG2 INT_L_X94Y143 SW6END2', 'INT_L_X94Y143 NW6BEG3 INT_L_X92Y147 NW6END3', 'INT_L_X92Y147 NE6BEG3 INT_L_X94Y148 SE6END0', 'INT_L_X94Y148 SS6BEG0 INT_L_X94Y142 SS6END0', 'INT_L_X94Y142 NW6BEG1 INT_L_X92Y146 NW6END1', 'INT_L_X92Y146 NE6BEG1 INT_L_X94Y149 SE6END2', 'INT_L_X94Y149 NE6BEG2 INT_R_X95Y146 SW6END1', 'INT_R_X95Y146 NW6BEG2 INT_R_X93Y149 SW6END1', 'INT_R_X93Y149 SE6BEG1 INT_R_X95Y145 SE6END1', 'INT_R_X95Y145 NE6BEG1 INT_L_X94Y149 NW6END1', 'INT_L_X94Y149 NE6BEG1 INT_R_X95Y146 SW6END2', 'INT_R_X95Y146 NW6BEG3 INT_R_X93Y149 SW6END0', 'INT_R_X93Y149 SE6BEG0 INT_R_X95Y145 SE6END0', 'INT_R_X95Y145 SE6BEG0 INT_L_X94Y141 SW6END0', 'INT_L_X94Y141 NW6BEG1 INT_L_X92Y145 NW6END1', 'INT_L_X92Y145 NW6BEG1 INT_L_X90Y149 NW6END1', 'INT_L_X90Y149 NE6BEG1 INT_L_X92Y146 SE6END2', 'INT_L_X92Y146 NE6BEG2 INT_L_X94Y149 SE6END1', 'INT_L_X94Y149 NN6BEG1 INT_L_X94Y144 SS6END2', 'INT_L_X94Y144 NW6BEG3 INT_L_X92Y148 NW6END3', 'INT_L_X92Y148 NE6BEG3 INT_L_X94Y147 SE6END0', 'INT_L_X94Y147 SE6BEG0 INT_R_X95Y143 SW6END0', 'INT_R_X95Y143 NW6BEG1 INT_R_X93Y147 NW6END1', 'INT_R_X93Y147 NE6BEG1 INT_R_X95Y148 SE6END2', 'INT_R_X95Y148 NE6BEG2 INT_L_X94Y147 SW6END1', 'INT_L_X94Y147 NW6BEG2 INT_L_X92Y148 SW6END1', 'INT_L_X92Y148 SE6BEG1 INT_L_X94Y144 SE6END1', 'INT_L_X94Y144 NE6BEG1 INT_R_X95Y148 NW6END1', 'INT_R_X95Y148 NE6BEG1 INT_L_X94Y147 SW6END2', 'INT_L_X94Y147 NW6BEG3 INT_L_X92Y148 SW6END0', 'INT_L_X92Y148 SE6BEG0 INT_L_X94Y144 SE6END0', 'INT_L_X94Y144 SE6BEG0 INT_R_X95Y140 SW6END0', 'INT_R_X95Y140 NW6BEG1 INT_R_X93Y144 NW6END1', 'INT_R_X93Y144 NW6BEG1 INT_R_X91Y148 NW6END1', 'INT_R_X91Y148 NE6BEG1 INT_R_X93Y147 SE6END2', 'INT_R_X93Y147 NE6BEG2 INT_R_X95Y148 SE6END1', 'INT_R_X95Y148 NN6BEG1 INT_R_X95Y145 SS6END2', 'INT_R_X95Y145 NW6BEG3 INT_R_X93Y149 NW6END3', 'INT_R_X93Y149 NE6BEG3 INT_R_X95Y146 SE6END0', 'INT_R_X95Y146 SE6BEG0 INT_L_X94Y142 SW6END0', 'INT_L_X94Y142 SS6BEG0 INT_L_X94Y136 SS6END0', 'INT_L_X94Y136 NW6BEG1 INT_L_X92Y140 NW6END1', 'INT_L_X92Y140 NW6BEG1 INT_L_X90Y144 NW6END1', 'INT_L_X90Y144 NW6BEG1 INT_L_X88Y148 NW6END1', 'INT_L_X88Y148 NE6BEG1 INT_R_X89Y152 NW6END1', 'INT_R_X89Y152 NE6BEG1 INT_L_X88Y156 NW6END1', 'INT_L_X88Y156 NE6BEG1 INT_R_X89Y160 NW6END1', 'INT_R_X89Y160 NE6BEG1 INT_L_X88Y164 NW6END1', 'INT_L_X88Y164 NE6BEG1 INT_R_X89Y168 NW6END1', 'INT_R_X89Y168 NE6BEG1 INT_L_X88Y172 NW6END1', 'INT_L_X88Y172 NE6BEG1 INT_R_X89Y176 NW6END1', 'INT_R_X89Y176 NE6BEG1 INT_L_X88Y180 NW6END1', 'INT_L_X88Y180 NE6BEG1 INT_R_X89Y184 NW6END1', 'INT_R_X89Y184 NE6BEG1 INT_L_X88Y188 NW6END1', 'INT_L_X88Y188 NE6BEG1 INT_R_X89Y192 NW6END1', 'INT_R_X89Y192 NE6BEG1 INT_L_X88Y196 NW6END1', 'INT_L_X88Y196 NE6BEG1 INT_R_X89Y200 NW6END1', 'INT_R_X89Y200 NE6BEG1 INT_L_X88Y204 NW6END1', 'INT_L_X88Y204 NE6BEG1 INT_R_X89Y208 NW6END1', 'INT_R_X89Y208 NE6BEG1 INT_L_X88Y212 NW6END1', 'INT_L_X88Y212 NE6BEG1 INT_R_X89Y216 NW6END1', 'INT_R_X89Y216 NE6BEG1 INT_L_X88Y220 NW6END1', 'INT_L_X88Y220 NE6BEG1 INT_R_X89Y224 NW6END1', 'INT_R_X89Y224 NE6BEG1 INT_L_X88Y228 NW6END1', 'INT_L_X88Y228 NE6BEG1 INT_R_X89Y232 NW6END1', 'INT_R_X89Y232 NE6BEG1 INT_L_X88Y236 NW6END1', 'INT_L_X88Y236 NE6BEG1 INT_R_X89Y240 NW6END1', 'INT_R_X89Y240 NE6BEG1 INT_L_X88Y244 NW6END1', 'INT_L_X88Y244 NE6BEG1 INT_R_X89Y248 NW6END1', 'INT_R_X89Y248 NE6BEG1 INT_L_X88Y252 NW6END1', 'INT_L_X88Y252 NE6BEG1 INT_R_X89Y256 NW6END1', 'INT_R_X89Y256 NE6BEG1 INT_L_X88Y260 NW6END1', 'INT_L_X88Y260 NE6BEG1 INT_R_X89Y264 NW6END1', 'INT_R_X89Y264 NE6BEG1 INT_L_X88Y268 NW6END1', 'INT_L_X88Y268 NE6BEG1 INT_R_X89Y272 NW6END1', 'INT_R_X89Y272 NE6BEG1 INT_L_X88Y276 NW6END1', 'INT_L_X88Y276 NE6BEG1 INT_R_X89Y280 NW6END1', 'INT_R_X89Y280 NE6BEG1 INT_L_X88Y284 NW6END1', 'INT_L_X88Y284 NE6BEG1 INT_R_X89Y288 NW6END1', 'INT_R_X89Y288 NE6BEG1 INT_L_X88Y292 NW6END1', 'INT_L_X88Y292 NE6BEG1 INT_R_X89Y296 NW6END1', 'INT_R_X89Y296 NE6BEG1 INT_L_X88Y300 NW6END1', 'INT_L_X88Y300 NE6BEG1 INT_R_X89Y304 NW6END1', 'INT_R_X89Y304 NE6BEG1 INT_L_X88Y308 NW6END1', 'INT_L_X88Y308 NE6BEG1 INT_R_X89Y312 NW6END1', 'INT_R_X89Y312 NE6BEG1 INT_L_X88Y316 NW6END1', 'INT_L_X88Y316 NE6BEG1 INT_R_X89Y320 NW6END1', 'INT_R_X89Y320 NE6BEG1 INT_L_X88Y324 NW6END1', 'INT_L_X88Y324 NE6BEG1 INT_R_X89Y328 NW6END1', 'INT_R_X89Y328 NE6BEG1 INT_L_X88Y332 NW6END1', 'INT_L_X88Y332 NE6BEG1 INT_R_X89Y336 NW6END1', 'INT_R_X89Y336 NE6BEG1 INT_L_X88Y340 NW6END1', 'INT_L_X88Y340 NE6BEG1 INT_R_X89Y344 NW6END1', 'INT_R_X89Y344 NE6BEG1 INT_L_X88Y348 NW6END1', 'INT_L_X88Y348 NE6BEG1 INT_R_X89Y347 SW6END2', 'INT_R_X89Y347 NW6BEG3 INT_R_X87Y348 SW6END0', 'INT_R_X87Y348 SE6BEG0 INT_R_X89Y344 SE6END0', 'INT_R_X89Y344 SE6BEG0 INT_L_X88Y340 SW6END0', 'INT_L_X88Y340 NW6BEG1 INT_L_X86Y344 NW6END1', 'INT_L_X86Y344 NW6BEG1 INT_L_X84Y348 NW6END1', 'INT_L_X84Y348 NE6BEG1 INT_L_X86Y347 SE6END2', 'INT_L_X86Y347 NE6BEG2 INT_L_X88Y348 SE6END1', 'INT_L_X88Y348 NN6BEG1 INT_L_X88Y345 SS6END2', 'INT_L_X88Y345 NW6BEG3 INT_L_X86Y349 NW6END3', 'INT_L_X86Y349 NE6BEG3 INT_L_X88Y346 SE6END0', 'INT_L_X88Y346 SE6BEG0 INT_R_X89Y342 SW6END0', 'INT_R_X89Y342 NW6BEG1 INT_R_X87Y346 NW6END1', 'INT_R_X87Y346 NE6BEG1 INT_R_X89Y349 SE6END2', 'INT_R_X89Y349 NE6BEG2 INT_L_X88Y346 SW6END1', 'INT_L_X88Y346 NW6BEG2 INT_L_X86Y349 SW6END1', 'INT_L_X86Y349 SE6BEG1 INT_L_X88Y345 SE6END1', 'INT_L_X88Y345 NE6BEG1 INT_R_X89Y349 NW6END1', 'INT_R_X89Y349 NE6BEG1 INT_L_X88Y346 SW6END2', 'INT_L_X88Y346 NW6BEG3 INT_L_X86Y349 SW6END0', 'INT_L_X86Y349 SE6BEG0 INT_L_X88Y345 SE6END0', 'INT_L_X88Y345 SE6BEG0 INT_R_X89Y341 SW6END0', 'INT_R_X89Y341 NW6BEG1 INT_R_X87Y345 NW6END1', 'INT_R_X87Y345 NW6BEG1 INT_R_X85Y349 NW6END1', 'INT_R_X85Y349 NE6BEG1 INT_R_X87Y346 SE6END2', 'INT_R_X87Y346 NE6BEG2 INT_R_X89Y349 SE6END1', 'INT_R_X89Y349 NN6BEG1 INT_R_X89Y344 SS6END2', 'INT_R_X89Y344 NW6BEG3 INT_R_X87Y348 NW6END3', 'INT_R_X87Y348 NE6BEG3 INT_R_X89Y347 SE6END0', 'INT_R_X89Y347 SE6BEG0 INT_L_X88Y343 SW6END0', 'INT_L_X88Y343 NW6BEG1 INT_L_X86Y347 NW6END1', 'INT_L_X86Y347 NE6BEG1 INT_L_X88Y348 SE6END2', 'INT_L_X88Y348 NE6BEG2 INT_R_X89Y347 SW6END1', 'INT_R_X89Y347 NW6BEG2 INT_R_X87Y348 SW6END1', 'INT_R_X87Y348 SE6BEG1 INT_R_X89Y344 SE6END1', 'INT_R_X89Y344 NN6BEG1 INT_R_X89Y349 SS6END2', 'INT_R_X89Y349 NW6BEG3 INT_R_X87Y346 SW6END0', 'INT_R_X87Y346 SE6BEG0 INT_R_X89Y342 SE6END0', 'INT_R_X89Y342 NN6BEG0 INT_R_X89Y348 NN6END0', 'INT_R_X89Y348 SE6BEG0 INT_L_X88Y344 SW6END0', 'INT_L_X88Y344 NW6BEG1 INT_L_X86Y348 NW6END1', 'INT_L_X86Y348 NE6BEG1 INT_L_X88Y347 SE6END2', 'INT_L_X88Y347 NE6BEG2 INT_R_X89Y348 SW6END1', 'INT_R_X89Y348 NW6BEG2 INT_R_X87Y347 SW6END1', 'INT_R_X87Y347 SE6BEG1 INT_R_X89Y343 SE6END1', 'INT_R_X89Y343 NE6BEG1 INT_L_X88Y347 NW6END1', 'INT_L_X88Y347 NE6BEG1 INT_R_X89Y348 SW6END2', 'INT_R_X89Y348 NW6BEG3 INT_R_X87Y347 SW6END0', 'INT_R_X87Y347 SE6BEG0 INT_R_X89Y343 SE6END0', 'INT_R_X89Y343 NN6BEG0 INT_R_X89Y349 NN6END0', 'INT_R_X89Y349 SE6BEG0 INT_L_X88Y345 SW6END0', 'INT_L_X88Y345 NW6BEG1 INT_L_X86Y349 NW6END1', 'INT_L_X86Y349 NE6BEG1 INT_L_X88Y346 SE6END2', 'INT_L_X88Y346 NE6BEG2 INT_R_X89Y349 SW6END1', 'INT_R_X89Y349 NW6BEG2 INT_R_X87Y346 SW6END1', 'INT_R_X87Y346 SE6BEG1 INT_R_X89Y342 SE6END1', 'INT_R_X89Y342 NE6BEG1 INT_L_X88Y346 NW6END1', 'INT_L_X88Y346 NE6BEG1 INT_R_X89Y349 SW6END2', 'INT_R_X89Y349 SE6BEG2 INT_L_X88Y345 SW6END2', 'INT_L_X88Y345 SE6BEG2 INT_R_X89Y341 SW6END2', 'INT_R_X89Y341 NW6BEG3 INT_R_X87Y345 NW6END3', 'INT_R_X87Y345 NW6BEG3 INT_R_X85Y349 NW6END3', 'INT_R_X85Y349 NE6BEG3 INT_R_X87Y346 SE6END0', 'INT_R_X87Y346 NE6BEG0 INT_R_X89Y349 SE6END3', 'INT_R_X89Y349 NE6BEG3 INT_L_X88Y346 SW6END0', 'INT_L_X88Y346 NW6BEG1 INT_L_X86Y349 SW6END2', 'INT_L_X86Y349 SE6BEG2 INT_L_X88Y345 SE6END2', 'INT_L_X88Y345 NE6BEG2 INT_R_X89Y349 NW6END2', 'INT_R_X89Y349 NN6BEG2 INT_R_X89Y344 SS6END1', 'INT_R_X89Y344 NW6BEG2 INT_R_X87Y348 NW6END2', 'INT_R_X87Y348 NE6BEG2 INT_R_X89Y347 SE6END1', 'INT_R_X89Y347 NE6BEG1 INT_L_X88Y348 SW6END2', 'INT_L_X88Y348 NW6BEG3 INT_L_X86Y347 SW6END0', 'INT_L_X86Y347 SE6BEG0 INT_L_X88Y343 SE6END0', 'INT_L_X88Y343 NN6BEG0 INT_L_X88Y349 NN6END0', 'INT_L_X88Y349 SE6BEG0 INT_R_X89Y345 SW6END0', 'INT_R_X89Y345 NW6BEG1 INT_R_X87Y349 NW6END1', 'INT_R_X87Y349 NE6BEG1 INT_R_X89Y346 SE6END2', 'INT_R_X89Y346 NE6BEG2 INT_L_X88Y349 SW6END1', 'INT_L_X88Y349 NW6BEG2 INT_L_X86Y346 SW6END1', 'INT_L_X86Y346 SE6BEG1 INT_L_X88Y342 SE6END1', 'INT_L_X88Y342 NE6BEG1 INT_R_X89Y346 NW6END1', 'INT_R_X89Y346 NE6BEG1 INT_L_X88Y349 SW6END2', 'INT_L_X88Y349 NW6BEG3 INT_L_X86Y346 SW6END0', 'INT_L_X86Y346 SE6BEG0 INT_L_X88Y342 SE6END0', 'INT_L_X88Y342 NN6BEG0 INT_L_X88Y348 NN6END0', 'INT_L_X88Y348 SE6BEG0 INT_R_X89Y344 SW6END0', 'INT_R_X89Y344 NW6BEG1 INT_R_X87Y348 NW6END1', 'INT_R_X87Y348 NE6BEG1 INT_R_X89Y347 SE6END2', 'INT_R_X89Y347 NE6BEG2 INT_L_X88Y348 SW6END1', 'INT_L_X88Y348 NW6BEG2 INT_L_X86Y347 SW6END1', 'INT_L_X86Y347 SE6BEG1 INT_L_X88Y343 SE6END1', 'INT_L_X88Y343 NE6BEG1 INT_R_X89Y347 NW6END1', 'INT_R_X89Y347 NN6BEG1 INT_R_X89Y346 SS6END2', 'INT_R_X89Y346 NW6BEG3 INT_R_X87Y349 SW6END0', 'INT_R_X87Y349 SE6BEG0 INT_R_X89Y345 SE6END0', 'INT_R_X89Y345 SE6BEG0 INT_L_X88Y341 SW6END0', 'INT_L_X88Y341 NW6BEG1 INT_L_X86Y345 NW6END1', 'INT_L_X86Y345 NW6BEG1 INT_L_X84Y349 NW6END1', 'INT_L_X84Y349 NE6BEG1 INT_L_X86Y346 SE6END2', 'INT_L_X86Y346 NE6BEG2 INT_L_X88Y349 SE6END1', 'INT_L_X88Y349 NE6BEG1 INT_R_X89Y346 SW6END2', 'INT_R_X89Y346 SE6BEG2 INT_L_X88Y342 SW6END2', 'INT_L_X88Y342 NW6BEG3 INT_L_X86Y346 NW6END3', 'INT_L_X86Y346 NE6BEG3 INT_L_X88Y349 SE6END0', 'INT_L_X88Y349 SS6BEG0 INT_L_X88Y343 SS6END0', 'INT_L_X88Y343 SE6BEG0 INT_R_X89Y339 SW6END0', 'INT_R_X89Y339 NW6BEG1 INT_R_X87Y343 NW6END1', 'INT_R_X87Y343 NW6BEG1 INT_R_X85Y347 NW6END1', 'INT_R_X85Y347 NE6BEG1 INT_R_X87Y348 SE6END2', 'INT_R_X87Y348 SE6BEG2 INT_R_X89Y344 SE6END2', 'INT_R_X89Y344 NE6BEG2 INT_L_X88Y348 NW6END2', 'INT_L_X88Y348 NN6BEG2 INT_L_X88Y345 SS6END1', 'INT_L_X88Y345 NW6BEG2 INT_L_X86Y349 NW6END2', 'INT_L_X86Y349 NE6BEG2 INT_L_X88Y346 SE6END1', 'INT_L_X88Y346 NN6BEG1 INT_L_X88Y347 SS6END2', 'INT_L_X88Y347 NW6BEG3 INT_L_X86Y348 SW6END0', 'INT_L_X86Y348 SE6BEG0 INT_L_X88Y344 SE6END0', 'INT_L_X88Y344 SE6BEG0 INT_R_X89Y340 SW6END0', 'INT_R_X89Y340 NW6BEG1 INT_R_X87Y344 NW6END1', 'INT_R_X87Y344 NW6BEG1 INT_R_X85Y348 NW6END1', 'INT_R_X85Y348 NE6BEG1 INT_R_X87Y347 SE6END2', 'INT_R_X87Y347 NE6BEG2 INT_R_X89Y348 SE6END1', 'INT_R_X89Y348 NE6BEG1 INT_L_X88Y347 SW6END2', 'INT_L_X88Y347 SE6BEG2 INT_R_X89Y343 SW6END2', 'INT_R_X89Y343 NW6BEG3 INT_R_X87Y347 NW6END3', 'INT_R_X87Y347 NE6BEG3 INT_R_X89Y348 SE6END0', 'INT_R_X89Y348 SS6BEG0 INT_R_X89Y342 SS6END0', 'INT_R_X89Y342 SE6BEG0 INT_L_X88Y338 SW6END0', 'INT_L_X88Y338 NW6BEG1 INT_L_X86Y342 NW6END1', 'INT_L_X86Y342 NW6BEG1 INT_L_X84Y346 NW6END1', 'INT_L_X84Y346 NE6BEG1 INT_L_X86Y349 SE6END2', 'INT_L_X86Y349 NN6BEG2 INT_L_X86Y344 SS6END1', 'INT_L_X86Y344 NW6BEG2 INT_L_X84Y348 NW6END2', 'INT_L_X84Y348 NE6BEG2 INT_L_X86Y347 SE6END1', 'INT_L_X86Y347 NN6BEG1 INT_L_X86Y346 SS6END2', 'INT_L_X86Y346 SE6BEG2 INT_L_X88Y342 SE6END2', 'INT_L_X88Y342 NE6BEG2 INT_R_X89Y346 NW6END2', 'INT_R_X89Y346 NN6BEG2 INT_R_X89Y347 SS6END1', 'INT_R_X89Y347 SE6BEG1 INT_L_X88Y343 SW6END1', 'INT_L_X88Y343 NW6BEG2 INT_L_X86Y347 NW6END2', 'INT_L_X86Y347 NN6BEG2 INT_L_X86Y346 SS6END1', 'INT_L_X86Y346 NW6BEG2 INT_L_X84Y349 SW6END1', 'INT_L_X84Y349 SE6BEG1 INT_L_X86Y345 SE6END1', 'INT_L_X86Y345 SE6BEG1 INT_L_X88Y341 SE6END1', 'INT_L_X88Y341 NE6BEG1 INT_R_X89Y345 NW6END1', 'INT_R_X89Y345 NE6BEG1 INT_L_X88Y349 NW6END1', 'INT_L_X88Y349 NN6BEG1 INT_L_X88Y344 SS6END2', 'INT_L_X88Y344 NW6BEG3 INT_L_X86Y348 NW6END3', 'INT_L_X86Y348 NE6BEG3 INT_L_X88Y347 SE6END0', 'INT_L_X88Y347 SE6BEG0 INT_R_X89Y343 SW6END0', 'INT_R_X89Y343 NW6BEG1 INT_R_X87Y347 NW6END1', 'INT_R_X87Y347 NE6BEG1 INT_R_X89Y348 SE6END2', 'INT_R_X89Y348 NE6BEG2 INT_L_X88Y347 SW6END1', 'INT_L_X88Y347 NW6BEG2 INT_L_X86Y348 SW6END1', 'INT_L_X86Y348 SE6BEG1 INT_L_X88Y344 SE6END1', 'INT_L_X88Y344 NE6BEG1 INT_R_X89Y348 NW6END1', 'INT_R_X89Y348 NN6BEG1 INT_R_X89Y345 SS6END2', 'INT_R_X89Y345 NW6BEG3 INT_R_X87Y349 NW6END3', 'INT_R_X87Y349 NE6BEG3 INT_R_X89Y346 SE6END0', 'INT_R_X89Y346 SE6BEG0 INT_L_X88Y342 SW6END0', 'INT_L_X88Y342 NW6BEG1 INT_L_X86Y346 NW6END1', 'INT_L_X86Y346 NE6BEG1 INT_L_X88Y349 SE6END2', 'INT_L_X88Y349 NE6BEG2 INT_R_X89Y346 SW6END1', 'INT_R_X89Y346 NW6BEG2 INT_R_X87Y349 SW6END1', 'INT_R_X87Y349 SE6BEG1 INT_R_X89Y345 SE6END1', 'INT_R_X89Y345 NN6BEG1 INT_R_X89Y348 SS6END2', 'INT_R_X89Y348 SE6BEG2 INT_L_X88Y344 SW6END2', 'INT_L_X88Y344 SE6BEG2 INT_R_X89Y340 SW6END2', 'INT_R_X89Y340 NW6BEG3 INT_R_X87Y344 NW6END3', 'INT_R_X87Y344 NW6BEG3 INT_R_X85Y348 NW6END3', 'INT_R_X85Y348 NE6BEG3 INT_R_X87Y347 SE6END0', 'INT_R_X87Y347 NE6BEG0 INT_R_X89Y348 SE6END3', 'INT_R_X89Y348 NE6BEG3 INT_L_X88Y347 SW6END0', 'INT_L_X88Y347 NW6BEG1 INT_L_X86Y348 SW6END2', 'INT_L_X86Y348 SE6BEG2 INT_L_X88Y344 SE6END2', 'INT_L_X88Y344 NE6BEG2 INT_R_X89Y348 NW6END2', 'INT_R_X89Y348 NN6BEG2 INT_R_X89Y345 SS6END1', 'INT_R_X89Y345 NW6BEG2 INT_R_X87Y349 NW6END2', 'INT_R_X87Y349 NE6BEG2 INT_R_X89Y346 SE6END1', 'INT_R_X89Y346 NN6BEG1 INT_R_X89Y347 SS6END2', 'INT_R_X89Y347 SE6BEG2 INT_L_X88Y343 SW6END2', 'INT_L_X88Y343 NW6BEG3 INT_L_X86Y347 NW6END3', 'INT_L_X86Y347 NE6BEG3 INT_L_X88Y348 SE6END0', 'INT_L_X88Y348 SS6BEG0 INT_L_X88Y342 SS6END0', 'INT_L_X88Y342 SE6BEG0 INT_R_X89Y338 SW6END0', 'INT_R_X89Y338 NW6BEG1 INT_R_X87Y342 NW6END1', 'INT_R_X87Y342 NW6BEG1 INT_R_X85Y346 NW6END1', 'INT_R_X85Y346 NE6BEG1 INT_R_X87Y349 SE6END2', 'INT_R_X87Y349 SE6BEG2 INT_R_X89Y345 SE6END2', 'INT_R_X89Y345 NE6BEG2 INT_L_X88Y349 NW6END2', 'INT_L_X88Y349 NN6BEG2 INT_L_X88Y344 SS6END1', 'INT_L_X88Y344 NW6BEG2 INT_L_X86Y348 NW6END2', 'INT_L_X86Y348 NE6BEG2 INT_L_X88Y347 SE6END1', 'INT_L_X88Y347 NN6BEG1 INT_L_X88Y346 SS6END2', 'INT_L_X88Y346 SE6BEG2 INT_R_X89Y342 SW6END2', 'INT_R_X89Y342 NW6BEG3 INT_R_X87Y346 NW6END3', 'INT_R_X87Y346 NE6BEG3 INT_R_X89Y349 SE6END0', 'INT_R_X89Y349 SS6BEG0 INT_R_X89Y343 SS6END0', 'INT_R_X89Y343 SE6BEG0 INT_L_X88Y339 SW6END0', 'INT_L_X88Y339 NW6BEG1 INT_L_X86Y343 NW6END1', 'INT_L_X86Y343 NW6BEG1 INT_L_X84Y347 NW6END1', 'INT_L_X84Y347 NE6BEG1 INT_L_X86Y348 SE6END2', 'INT_L_X86Y348 NN6BEG2 INT_L_X86Y345 SS6END1', 'INT_L_X86Y345 NW6BEG2 INT_L_X84Y349 NW6END2', 'INT_L_X84Y349 NE6BEG2 INT_L_X86Y346 SE6END1', 'INT_L_X86Y346 NN6BEG1 INT_L_X86Y347 SS6END2', 'INT_L_X86Y347 SE6BEG2 INT_L_X88Y343 SE6END2', 'INT_L_X88Y343 NE6BEG2 INT_R_X89Y347 NW6END2', 'INT_R_X89Y347 NN6BEG2 INT_R_X89Y346 SS6END1', 'INT_R_X89Y346 SE6BEG1 INT_L_X88Y342 SW6END1', 'INT_L_X88Y342 NW6BEG2 INT_L_X86Y346 NW6END2', 'INT_L_X86Y346 NN6BEG2 INT_L_X86Y347 SS6END1', 'INT_L_X86Y347 NW6BEG2 INT_L_X84Y348 SW6END1', 'INT_L_X84Y348 SE6BEG1 INT_L_X86Y344 SE6END1', 'INT_L_X86Y344 SE6BEG1 INT_L_X88Y340 SE6END1', 'INT_L_X88Y340 NN6BEG1 INT_L_X88Y346 NN6END1', 'INT_L_X88Y346 SE6BEG1 INT_R_X89Y342 SW6END1', 'INT_R_X89Y342 NW6BEG2 INT_R_X87Y346 NW6END2', 'INT_R_X87Y346 NN6BEG2 INT_R_X87Y347 SS6END1', 'INT_R_X87Y347 NW6BEG2 INT_R_X85Y348 SW6END1', 'INT_R_X85Y348 SE6BEG1 INT_R_X87Y344 SE6END1', 'INT_R_X87Y344 SE6BEG1 INT_R_X89Y340 SE6END1', 'INT_R_X89Y340 NE6BEG1 INT_L_X88Y344 NW6END1', 'INT_L_X88Y344 NN6BEG1 INT_L_X88Y349 SS6END2', 'INT_L_X88Y349 SE6BEG2 INT_R_X89Y345 SW6END2', 'INT_R_X89Y345 SE6BEG2 INT_L_X88Y341 SW6END2', 'INT_L_X88Y341 NW6BEG3 INT_L_X86Y345 NW6END3', 'INT_L_X86Y345 NW6BEG3 INT_L_X84Y349 NW6END3', 'INT_L_X84Y349 NE6BEG3 INT_L_X86Y346 SE6END0', 'INT_L_X86Y346 NE6BEG0 INT_L_X88Y349 SE6END3', 'INT_L_X88Y349 NE6BEG3 INT_R_X89Y346 SW6END0', 'INT_R_X89Y346 NW6BEG1 INT_R_X87Y349 SW6END2', 'INT_R_X87Y349 NW6BEG3 INT_R_X85Y346 SW6END0', 'INT_R_X85Y346 SE6BEG0 INT_R_X87Y342 SE6END0', 'INT_R_X87Y342 SE6BEG0 INT_R_X89Y338 SE6END0', 'INT_R_X89Y338 NN6BEG0 INT_R_X89Y344 NN6END0', 'INT_R_X89Y344 NE6BEG0 INT_L_X88Y348 NW6END0', 'INT_L_X88Y348 NE6BEG0 INT_R_X89Y347 SW6END3', 'INT_R_X89Y347 SE6BEG3 INT_L_X88Y343 SW6END3', 'INT_L_X88Y343 SE6BEG3 INT_R_X89Y339 SW6END3', 'INT_R_X89Y339 SE6BEG3 INT_L_X88Y335 SW6END3', 'INT_L_X88Y335 SE6BEG3 INT_R_X89Y331 SW6END3', 'INT_R_X89Y331 SE6BEG3 INT_L_X88Y327 SW6END3', 'INT_L_X88Y327 SE6BEG3 INT_R_X89Y323 SW6END3', 'INT_R_X89Y323 SE6BEG3 INT_L_X88Y319 SW6END3', 'INT_L_X88Y319 SE6BEG3 INT_R_X89Y315 SW6END3', 'INT_R_X89Y315 SE6BEG3 INT_L_X88Y311 SW6END3', 'INT_L_X88Y311 SE6BEG3 INT_R_X89Y307 SW6END3', 'INT_R_X89Y307 SE6BEG3 INT_L_X88Y303 SW6END3', 'INT_L_X88Y303 SE6BEG3 INT_R_X89Y299 SW6END3', 'INT_R_X89Y299 SE6BEG3 INT_L_X88Y295 SW6END3', 'INT_L_X88Y295 SE6BEG3 INT_R_X89Y291 SW6END3', 'INT_R_X89Y291 SE6BEG3 INT_L_X88Y287 SW6END3', 'INT_L_X88Y287 SE6BEG3 INT_R_X89Y283 SW6END3', 'INT_R_X89Y283 SE6BEG3 INT_L_X88Y279 SW6END3', 'INT_L_X88Y279 SE6BEG3 INT_R_X89Y275 SW6END3', 'INT_R_X89Y275 SE6BEG3 INT_L_X88Y271 SW6END3', 'INT_L_X88Y271 SE6BEG3 INT_R_X89Y267 SW6END3', 'INT_R_X89Y267 SE6BEG3 INT_L_X88Y263 SW6END3', 'INT_L_X88Y263 SE6BEG3 INT_R_X89Y259 SW6END3', 'INT_R_X89Y259 SE6BEG3 INT_L_X88Y255 SW6END3', 'INT_L_X88Y255 SE6BEG3 INT_R_X89Y251 SW6END3', 'INT_R_X89Y251 SE6BEG3 INT_L_X88Y247 SW6END3', 'INT_L_X88Y247 SE6BEG3 INT_R_X89Y243 SW6END3', 'INT_R_X89Y243 SE6BEG3 INT_L_X88Y239 SW6END3', 'INT_L_X88Y239 SE6BEG3 INT_R_X89Y235 SW6END3', 'INT_R_X89Y235 SE6BEG3 INT_L_X88Y231 SW6END3', 'INT_L_X88Y231 SE6BEG3 INT_R_X89Y227 SW6END3', 'INT_R_X89Y227 SE6BEG3 INT_L_X88Y223 SW6END3', 'INT_L_X88Y223 SE6BEG3 INT_R_X89Y219 SW6END3', 'INT_R_X89Y219 SE6BEG3 INT_L_X88Y215 SW6END3', 'INT_L_X88Y215 SE6BEG3 INT_R_X89Y211 SW6END3', 'INT_R_X89Y211 SE6BEG3 INT_L_X88Y207 SW6END3', 'INT_L_X88Y207 SE6BEG3 INT_R_X89Y203 SW6END3', 'INT_R_X89Y203 SE6BEG3 INT_L_X88Y199 SW6END3', 'INT_L_X88Y199 SE6BEG3 INT_R_X89Y195 SW6END3', 'INT_R_X89Y195 SE6BEG3 INT_L_X88Y191 SW6END3', 'INT_L_X88Y191 SE6BEG3 INT_R_X89Y187 SW6END3', 'INT_R_X89Y187 SE6BEG3 INT_L_X88Y183 SW6END3', 'INT_L_X88Y183 SE6BEG3 INT_R_X89Y179 SW6END3', 'INT_R_X89Y179 SE6BEG3 INT_L_X88Y175 SW6END3', 'INT_L_X88Y175 SE6BEG3 INT_R_X89Y171 SW6END3', 'INT_R_X89Y171 SE6BEG3 INT_L_X88Y167 SW6END3', 'INT_L_X88Y167 SE6BEG3 INT_R_X89Y163 SW6END3', 'INT_R_X89Y163 SE6BEG3 INT_L_X88Y159 SW6END3', 'INT_L_X88Y159 SE6BEG3 INT_R_X89Y155 SW6END3', 'INT_R_X89Y155 SE6BEG3 INT_L_X88Y151 SW6END3', 'INT_L_X88Y151 SE6BEG3 INT_L_X90Y147 SE6END3', 'INT_L_X90Y147 NE6BEG3 INT_L_X92Y148 SE6END0', 'INT_L_X92Y148 NE6BEG0 INT_L_X94Y147 SE6END3', 'INT_L_X94Y147 NE6BEG3 INT_R_X95Y148 SW6END0', 'INT_R_X95Y148 NW6BEG1 INT_R_X93Y147 SW6END2', 'INT_R_X93Y147 SE6BEG2 INT_R_X95Y143 SE6END2', 'INT_R_X95Y143 NE6BEG2 INT_L_X94Y147 NW6END2', 'INT_L_X94Y147 NE6BEG2 INT_R_X95Y148 SW6END1', 'INT_R_X95Y148 NW6BEG2 INT_R_X93Y147 SW6END1', 'INT_R_X93Y147 SE6BEG1 INT_R_X95Y143 SE6END1', 'INT_R_X95Y143 NE6BEG1 INT_L_X94Y147 NW6END1', 'INT_L_X94Y147 NE6BEG1 INT_R_X95Y148 SW6END2', 'INT_R_X95Y148 NW6BEG3 INT_R_X93Y147 SW6END0', 'INT_R_X93Y147 SE6BEG0 INT_R_X95Y143 SE6END0', 'INT_R_X95Y143 NN6BEG0 INT_R_X95Y149 NN6END0', 'INT_R_X95Y149 SE6BEG0 INT_L_X94Y145 SW6END0', 'INT_L_X94Y145 NW6BEG1 INT_L_X92Y149 NW6END1', 'INT_L_X92Y149 NE6BEG1 INT_L_X94Y146 SE6END2', 'INT_L_X94Y146 NE6BEG2 INT_R_X95Y149 SW6END1', 'INT_R_X95Y149 NW6BEG2 INT_R_X93Y146 SW6END1', 'INT_R_X93Y146 SE6BEG1 INT_R_X95Y142 SE6END1', 'INT_R_X95Y142 NE6BEG1 INT_L_X94Y146 NW6END1', 'INT_L_X94Y146 NE6BEG1 INT_R_X95Y149 SW6END2', 'INT_R_X95Y149 NW6BEG3 INT_R_X93Y146 SW6END0', 'INT_R_X93Y146 SE6BEG0 INT_R_X95Y142 SE6END0', 'INT_R_X95Y142 NN6BEG0 INT_R_X95Y148 NN6END0', 'INT_R_X95Y148 SE6BEG0 INT_L_X94Y144 SW6END0', 'INT_L_X94Y144 NW6BEG1 INT_L_X92Y148 NW6END1', 'INT_L_X92Y148 NE6BEG1 INT_L_X94Y147 SE6END2', 'INT_L_X94Y147 NN6BEG2 INT_L_X94Y146 SS6END1', 'INT_L_X94Y146 NW6BEG2 INT_L_X92Y149 SW6END1', 'INT_L_X92Y149 SE6BEG1 INT_L_X94Y145 SE6END1', 'INT_L_X94Y145 NE6BEG1 INT_R_X95Y149 NW6END1', 'INT_R_X95Y149 NE6BEG1 INT_L_X94Y146 SW6END2', 'INT_L_X94Y146 NW6BEG3 INT_L_X92Y149 SW6END0', 'INT_L_X92Y149 SE6BEG0 INT_L_X94Y145 SE6END0', 'INT_L_X94Y145 SE6BEG0 INT_R_X95Y141 SW6END0', 'INT_R_X95Y141 NW6BEG1 INT_R_X93Y145 NW6END1', 'INT_R_X93Y145 NW6BEG1 INT_R_X91Y149 NW6END1', 'INT_R_X91Y149 NE6BEG1 INT_R_X93Y146 SE6END2', 'INT_R_X93Y146 NE6BEG2 INT_R_X95Y149 SE6END1', 'INT_R_X95Y149 NN6BEG1 INT_R_X95Y144 SS6END2', 'INT_R_X95Y144 NW6BEG3 INT_R_X93Y148 NW6END3', 'INT_R_X93Y148 NE6BEG3 INT_R_X95Y147 SE6END0', 'INT_R_X95Y147 SE6BEG0 INT_L_X94Y143 SW6END0', 'INT_L_X94Y143 NW6BEG1 INT_L_X92Y147 NW6END1', 'INT_L_X92Y147 NE6BEG1 INT_L_X94Y148 SE6END2', 'INT_L_X94Y148 NE6BEG2 INT_R_X95Y147 SW6END1', 'INT_R_X95Y147 NW6BEG2 INT_R_X93Y148 SW6END1', 'INT_R_X93Y148 SE6BEG1 INT_R_X95Y144 SE6END1', 'INT_R_X95Y144 NE6BEG1 INT_L_X94Y148 NW6END1', 'INT_L_X94Y148 NN6BEG1 INT_L_X94Y145 SS6END2', 'INT_L_X94Y145 NW6BEG3 INT_L_X92Y149 NW6END3', 'INT_L_X92Y149 NE6BEG3 INT_L_X94Y146 SE6END0', 'INT_L_X94Y146 SE6BEG0 INT_R_X95Y142 SW6END0', 'INT_R_X95Y142 NW6BEG1 INT_R_X93Y146 NW6END1', 'INT_R_X93Y146 NE6BEG1 INT_R_X95Y149 SE6END2', 'INT_R_X95Y149 NE6BEG2 INT_L_X94Y146 SW6END1', 'INT_L_X94Y146 SE6BEG1 INT_R_X95Y142 SW6END1', 'INT_R_X95Y142 NW6BEG2 INT_R_X93Y146 NW6END2', 'INT_R_X93Y146 NN6BEG2 INT_R_X93Y147 SS6END1', 'INT_R_X93Y147 NW6BEG2 INT_R_X91Y148 SW6END1', 'INT_R_X91Y148 SE6BEG1 INT_R_X93Y144 SE6END1', 'INT_R_X93Y144 SE6BEG1 INT_R_X95Y140 SE6END1', 'INT_R_X95Y140 NE6BEG1 INT_L_X94Y144 NW6END1', 'INT_L_X94Y144 NN6BEG1 INT_L_X94Y149 SS6END2', 'INT_L_X94Y149 SE6BEG2 INT_R_X95Y145 SW6END2', 'INT_R_X95Y145 SE6BEG2 INT_L_X94Y141 SW6END2', 'INT_L_X94Y141 NW6BEG3 INT_L_X92Y145 NW6END3', 'INT_L_X92Y145 NW6BEG3 INT_L_X90Y149 NW6END3', 'INT_L_X90Y149 NE6BEG3 INT_L_X92Y146 SE6END0', 'INT_L_X92Y146 NE6BEG0 INT_L_X94Y149 SE6END3', 'INT_L_X94Y149 NE6BEG3 INT_R_X95Y146 SW6END0', 'INT_R_X95Y146 NW6BEG1 INT_R_X93Y149 SW6END2', 'INT_R_X93Y149 SE6BEG2 INT_R_X95Y145 SE6END2', 'INT_R_X95Y145 NE6BEG2 INT_L_X94Y149 NW6END2', 'INT_L_X94Y149 NN6BEG2 INT_L_X94Y144 SS6END1', 'INT_L_X94Y144 NW6BEG2 INT_L_X92Y148 NW6END2', 'INT_L_X92Y148 NE6BEG2 INT_L_X94Y147 SE6END1', 'INT_L_X94Y147 NN6BEG1 INT_L_X94Y146 SS6END2', 'INT_L_X94Y146 SE6BEG2 INT_R_X95Y142 SW6END2', 'INT_R_X95Y142 NW6BEG3 INT_R_X93Y146 NW6END3', 'INT_R_X93Y146 NE6BEG3 INT_R_X95Y149 SE6END0', 'INT_R_X95Y149 SS6BEG0 INT_R_X95Y143 SS6END0', 'INT_R_X95Y143 SE6BEG0 INT_L_X94Y139 SW6END0', 'INT_L_X94Y139 NW6BEG1 INT_L_X92Y143 NW6END1', 'INT_L_X92Y143 NW6BEG1 INT_L_X90Y147 NW6END1', 'INT_L_X90Y147 NE6BEG1 INT_L_X92Y148 SE6END2', 'INT_L_X92Y148 SE6BEG2 INT_L_X94Y144 SE6END2', 'INT_L_X94Y144 NE6BEG2 INT_R_X95Y148 NW6END2', 'INT_R_X95Y148 NN6BEG2 INT_R_X95Y145 SS6END1', 'INT_R_X95Y145 NW6BEG2 INT_R_X93Y149 NW6END2', 'INT_R_X93Y149 NN6BEG2 INT_R_X93Y144 SS6END1', 'INT_R_X93Y144 NW6BEG2 INT_R_X91Y148 NW6END2', 'INT_R_X91Y148 NE6BEG2 INT_R_X93Y147 SE6END1', 'INT_R_X93Y147 NN6BEG1 INT_R_X93Y146 SS6END2', 'INT_R_X93Y146 SE6BEG2 INT_R_X95Y142 SE6END2', 'INT_R_X95Y142 NE6BEG2 INT_L_X94Y146 NW6END2', 'INT_L_X94Y146 NN6BEG2 INT_L_X94Y147 SS6END1', 'INT_L_X94Y147 SE6BEG1 INT_R_X95Y143 SW6END1', 'INT_R_X95Y143 NW6BEG2 INT_R_X93Y147 NW6END2', 'INT_R_X93Y147 NN6BEG2 INT_R_X93Y146 SS6END1', 'INT_R_X93Y146 NW6BEG2 INT_R_X91Y149 SW6END1', 'INT_R_X91Y149 SE6BEG1 INT_R_X93Y145 SE6END1', 'INT_R_X93Y145 SE6BEG1 INT_R_X95Y141 SE6END1', 'INT_R_X95Y141 NE6BEG1 INT_L_X94Y145 NW6END1', 'INT_L_X94Y145 NN6BEG1 INT_L_X94Y148 SS6END2', 'INT_L_X94Y148 SE6BEG2 INT_R_X95Y144 SW6END2', 'INT_R_X95Y144 SE6BEG2 INT_L_X94Y140 SW6END2', 'INT_L_X94Y140 NW6BEG3 INT_L_X92Y144 NW6END3', 'INT_L_X92Y144 NW6BEG3 INT_L_X90Y148 NW6END3', 'INT_L_X90Y148 NE6BEG3 INT_L_X92Y147 SE6END0', 'INT_L_X92Y147 NE6BEG0 INT_L_X94Y148 SE6END3', 'INT_L_X94Y148 NE6BEG3 INT_R_X95Y147 SW6END0', 'INT_R_X95Y147 NW6BEG1 INT_R_X93Y148 SW6END2', 'INT_R_X93Y148 SE6BEG2 INT_R_X95Y144 SE6END2', 'INT_R_X95Y144 NE6BEG2 INT_L_X94Y148 NW6END2', 'INT_L_X94Y148 NN6BEG2 INT_L_X94Y145 SS6END1', 'INT_L_X94Y145 NW6BEG2 INT_L_X92Y149 NW6END2', 'INT_L_X92Y149 NE6BEG2 INT_L_X94Y146 SE6END1', 'INT_L_X94Y146 NN6BEG1 INT_L_X94Y147 SS6END2', 'INT_L_X94Y147 SE6BEG2 INT_R_X95Y143 SW6END2', 'INT_R_X95Y143 NW6BEG3 INT_R_X93Y147 NW6END3', 'INT_R_X93Y147 NE6BEG3 INT_R_X95Y148 SE6END0', 'INT_R_X95Y148 SS6BEG0 INT_R_X95Y142 SS6END0', 'INT_R_X95Y142 SE6BEG0 INT_L_X94Y138 SW6END0', 'INT_L_X94Y138 NW6BEG1 INT_L_X92Y142 NW6END1', 'INT_L_X92Y142 NW6BEG1 INT_L_X90Y146 NW6END1', 'INT_L_X90Y146 NE6BEG1 INT_L_X92Y149 SE6END2', 'INT_L_X92Y149 SE6BEG2 INT_L_X94Y145 SE6END2', 'INT_L_X94Y145 NE6BEG2 INT_R_X95Y149 NW6END2', 'INT_R_X95Y149 NN6BEG2 INT_R_X95Y144 SS6END1', 'INT_R_X95Y144 NW6BEG2 INT_R_X93Y148 NW6END2', 'INT_R_X93Y148 NE6BEG2 INT_R_X95Y147 SE6END1', 'INT_R_X95Y147 NN6BEG1 INT_R_X95Y146 SS6END2', 'INT_R_X95Y146 SE6BEG2 INT_L_X94Y142 SW6END2', 'INT_L_X94Y142 NW6BEG3 INT_L_X92Y146 NW6END3', 'INT_L_X92Y146 NE6BEG3 INT_L_X94Y149 SE6END0', 'INT_L_X94Y149 SS6BEG0 INT_L_X94Y143 SS6END0', 'INT_L_X94Y143 SE6BEG0 INT_R_X95Y139 SW6END0', 'INT_R_X95Y139 NW6BEG1 INT_R_X93Y143 NW6END1', 'INT_R_X93Y143 NW6BEG1 INT_R_X91Y147 NW6END1', 'INT_R_X91Y147 NE6BEG1 INT_R_X93Y148 SE6END2', 'INT_R_X93Y148 NN6BEG2 INT_R_X93Y145 SS6END1', 'INT_R_X93Y145 NW6BEG2 INT_R_X91Y149 NW6END2', 'INT_R_X91Y149 NE6BEG2 INT_R_X93Y146 SE6END1', 'INT_R_X93Y146 NN6BEG1 INT_R_X93Y147 SS6END2', 'INT_R_X93Y147 NW6BEG3 INT_R_X91Y148 SW6END0', 'INT_R_X91Y148 SE6BEG0 INT_R_X93Y144 SE6END0', 'INT_R_X93Y144 SE6BEG0 INT_R_X95Y140 SE6END0', 'INT_R_X95Y140 NN6BEG0 INT_R_X95Y146 NN6END0', 'INT_R_X95Y146 NE6BEG0 INT_L_X94Y149 SW6END3', 'INT_L_X94Y149 SE6BEG3 INT_R_X95Y145 SW6END3', 'INT_R_X95Y145 SE6BEG3 INT_L_X94Y141 SW6END3', 'INT_L_X94Y141 SE6BEG3 INT_R_X95Y137 SW6END3', 'INT_R_X95Y137 SE6BEG3 INT_L_X94Y133 SW6END3', 'INT_L_X94Y133 SE6BEG3 INT_R_X95Y129 SW6END3', 'INT_R_X95Y129 SE6BEG3 INT_L_X94Y125 SW6END3', 'INT_L_X94Y125 SE6BEG3 INT_R_X95Y121 SW6END3', 'INT_R_X95Y121 SE6BEG3 INT_L_X94Y117 SW6END3', 'INT_L_X94Y117 SE6BEG3 INT_R_X95Y113 SW6END3', 'INT_R_X95Y113 SE6BEG3 INT_L_X94Y109 SW6END3', 'INT_L_X94Y109 SE6BEG3 INT_R_X95Y105 SW6END3', 'INT_R_X95Y105 SE6BEG3 INT_L_X94Y101 SW6END3', 'INT_L_X94Y101 SE6BEG3 INT_R_X95Y97 SW6END3', 'INT_R_X95Y97 SE6BEG3 INT_L_X94Y93 SW6END3', 'INT_L_X94Y93 SE6BEG3 INT_R_X95Y89 SW6END3', 'INT_R_X95Y89 SE6BEG3 INT_L_X94Y85 SW6END3', 'INT_L_X94Y85 SE6BEG3 INT_R_X95Y81 SW6END3', 'INT_R_X95Y81 SE6BEG3 INT_L_X94Y77 SW6END3', 'INT_L_X94Y77 SE6BEG3 INT_R_X95Y73 SW6END3', 'INT_R_X95Y73 SE6BEG3 INT_L_X94Y69 SW6END3', 'INT_L_X94Y69 SE6BEG3 INT_R_X95Y65 SW6END3', 'INT_R_X95Y65 SE6BEG3 INT_L_X94Y61 SW6END3', 'INT_L_X94Y61 SE6BEG3 INT_R_X95Y57 SW6END3', 'INT_R_X95Y57 SE6BEG3 INT_L_X94Y53 SW6END3', 'INT_L_X94Y53 SE6BEG3 INT_R_X95Y49 SW6END3', 'INT_R_X95Y49 SE6BEG3 INT_L_X94Y45 SW6END3', 'INT_L_X94Y45 SE6BEG3 INT_R_X95Y41 SW6END3', 'INT_R_X95Y41 SE6BEG3 INT_L_X94Y37 SW6END3', 'INT_L_X94Y37 SE6BEG3 INT_R_X95Y33 SW6END3', 'INT_R_X95Y33 SE6BEG3 INT_L_X94Y29 SW6END3', 'INT_L_X94Y29 SE6BEG3 INT_R_X95Y25 SW6END3', 'INT_R_X95Y25 SE6BEG3 INT_L_X94Y21 SW6END3', 'INT_L_X94Y21 SE6BEG3 INT_R_X95Y17 SW6END3', 'INT_R_X95Y17 SE6BEG3 INT_L_X94Y13 SW6END3', 'INT_L_X94Y13 SE6BEG3 INT_R_X95Y9 SW6END3', 'INT_R_X95Y9 SE6BEG3 INT_L_X94Y5 SW6END3', 'INT_L_X94Y5 SS6BEG3 INT_L_X94Y0 NN6END0', 'INT_L_X94Y0 SE6BEG0 INT_R_X95Y3 NW6END3', 'INT_R_X95Y3 NE6BEG3 INT_L_X94Y7 NW6END3', 'INT_L_X94Y7 NE6BEG3 INT_R_X95Y11 NW6END3', 'INT_R_X95Y11 NE6BEG3 INT_L_X94Y15 NW6END3', 'INT_L_X94Y15 NE6BEG3 INT_R_X95Y19 NW6END3', 'INT_R_X95Y19 NE6BEG3 INT_L_X94Y23 NW6END3', 'INT_L_X94Y23 NE6BEG3 INT_R_X95Y27 NW6END3', 'INT_R_X95Y27 NE6BEG3 INT_L_X94Y31 NW6END3', 'INT_L_X94Y31 NE6BEG3 INT_R_X95Y35 NW6END3', 'INT_R_X95Y35 NE6BEG3 INT_L_X94Y39 NW6END3', 'INT_L_X94Y39 NE6BEG3 INT_R_X95Y43 NW6END3', 'INT_R_X95Y43 NE6BEG3 INT_L_X94Y47 NW6END3', 'INT_L_X94Y47 NE6BEG3 INT_R_X95Y51 NW6END3', 'INT_R_X95Y51 NE6BEG3 INT_L_X94Y55 NW6END3', 'INT_L_X94Y55 NE6BEG3 INT_R_X95Y59 NW6END3', 'INT_R_X95Y59 NE6BEG3 INT_L_X94Y63 NW6END3', 'INT_L_X94Y63 NE6BEG3 INT_R_X95Y67 NW6END3', 'INT_R_X95Y67 NE6BEG3 INT_L_X94Y71 NW6END3', 'INT_L_X94Y71 NE6BEG3 INT_R_X95Y75 NW6END3', 'INT_R_X95Y75 NE6BEG3 INT_L_X94Y79 NW6END3', 'INT_L_X94Y79 NE6BEG3 INT_R_X95Y83 NW6END3', 'INT_R_X95Y83 NE6BEG3 INT_L_X94Y87 NW6END3', 'INT_L_X94Y87 NE6BEG3 INT_R_X95Y91 NW6END3', 'INT_R_X95Y91 NE6BEG3 INT_L_X94Y95 NW6END3', 'INT_L_X94Y95 NE6BEG3 INT_R_X95Y99 NW6END3', 'INT_R_X95Y99 NE6BEG3 INT_L_X94Y103 NW6END3', 'INT_L_X94Y103 NE6BEG3 INT_R_X95Y107 NW6END3', 'INT_R_X95Y107 NE6BEG3 INT_L_X94Y111 NW6END3', 'INT_L_X94Y111 NE6BEG3 INT_R_X95Y115 NW6END3', 'INT_R_X95Y115 NE6BEG3 INT_L_X94Y119 NW6END3', 'INT_L_X94Y119 NE6BEG3 INT_R_X95Y123 NW6END3', 'INT_R_X95Y123 NE6BEG3 INT_L_X94Y127 NW6END3', 'INT_L_X94Y127 NE6BEG3 INT_R_X95Y131 NW6END3', 'INT_R_X95Y131 NE6BEG3 INT_L_X94Y135 NW6END3', 'INT_L_X94Y135 NE6BEG3 INT_R_X95Y139 NW6END3', 'INT_R_X95Y139 NE6BEG3 INT_L_X94Y143 NW6END3', 'INT_L_X94Y143 NE6BEG3 INT_R_X95Y147 NW6END3', 'INT_R_X95Y147 NE6BEG3 INT_L_X94Y148 SW6END0', 'INT_L_X94Y148 NW6BEG1 INT_L_X92Y147 SW6END2', 'INT_L_X92Y147 SE6BEG2 INT_L_X94Y143 SE6END2', 'INT_L_X94Y143 NE6BEG2 INT_R_X95Y147 NW6END2', 'INT_R_X95Y147 NN6BEG2 INT_R_X95Y146 SS6END1', 'INT_R_X95Y146 SE6BEG1 INT_L_X94Y142 SW6END1', 'INT_L_X94Y142 NW6BEG2 INT_L_X92Y146 NW6END2', 'INT_L_X92Y146 NN6BEG2 INT_L_X92Y147 SS6END1', 'INT_L_X92Y147 NW6BEG2 INT_L_X90Y148 SW6END1', 'INT_L_X90Y148 NW6BEG2 INT_L_X88Y152 NW6END2', 'INT_L_X88Y152 NE6BEG2 INT_R_X89Y156 NW6END2', 'INT_R_X89Y156 NE6BEG2 INT_L_X88Y160 NW6END2', 'INT_L_X88Y160 NE6BEG2 INT_R_X89Y164 NW6END2', 'INT_R_X89Y164 NE6BEG2 INT_L_X88Y168 NW6END2', 'INT_L_X88Y168 NE6BEG2 INT_R_X89Y172 NW6END2', 'INT_R_X89Y172 NE6BEG2 INT_L_X88Y176 NW6END2', 'INT_L_X88Y176 NE6BEG2 INT_R_X89Y180 NW6END2', 'INT_R_X89Y180 NE6BEG2 INT_L_X88Y184 NW6END2', 'INT_L_X88Y184 NE6BEG2 INT_R_X89Y188 NW6END2', 'INT_R_X89Y188 NE6BEG2 INT_L_X88Y192 NW6END2', 'INT_L_X88Y192 NE6BEG2 INT_R_X89Y196 NW6END2', 'INT_R_X89Y196 NE6BEG2 INT_L_X88Y200 NW6END2', 'INT_L_X88Y200 NE6BEG2 INT_R_X89Y204 NW6END2', 'INT_R_X89Y204 NE6BEG2 INT_L_X88Y208 NW6END2', 'INT_L_X88Y208 NE6BEG2 INT_R_X89Y212 NW6END2', 'INT_R_X89Y212 NE6BEG2 INT_L_X88Y216 NW6END2', 'INT_L_X88Y216 NE6BEG2 INT_R_X89Y220 NW6END2', 'INT_R_X89Y220 NE6BEG2 INT_L_X88Y224 NW6END2', 'INT_L_X88Y224 NE6BEG2 INT_R_X89Y228 NW6END2', 'INT_R_X89Y228 NE6BEG2 INT_L_X88Y232 NW6END2', 'INT_L_X88Y232 NE6BEG2 INT_R_X89Y236 NW6END2', 'INT_R_X89Y236 NE6BEG2 INT_L_X88Y240 NW6END2', 'INT_L_X88Y240 NE6BEG2 INT_R_X89Y244 NW6END2', 'INT_R_X89Y244 NE6BEG2 INT_L_X88Y248 NW6END2', 'INT_L_X88Y248 NE6BEG2 INT_R_X89Y252 NW6END2', 'INT_R_X89Y252 NE6BEG2 INT_L_X88Y256 NW6END2', 'INT_L_X88Y256 NE6BEG2 INT_R_X89Y260 NW6END2', 'INT_R_X89Y260 NE6BEG2 INT_L_X88Y264 NW6END2', 'INT_L_X88Y264 NE6BEG2 INT_R_X89Y268 NW6END2', 'INT_R_X89Y268 NE6BEG2 INT_L_X88Y272 NW6END2', 'INT_L_X88Y272 NE6BEG2 INT_R_X89Y276 NW6END2', 'INT_R_X89Y276 NE6BEG2 INT_L_X88Y280 NW6END2', 'INT_L_X88Y280 NE6BEG2 INT_R_X89Y284 NW6END2', 'INT_R_X89Y284 NE6BEG2 INT_L_X88Y288 NW6END2', 'INT_L_X88Y288 NE6BEG2 INT_R_X89Y292 NW6END2', 'INT_R_X89Y292 NE6BEG2 INT_L_X88Y296 NW6END2', 'INT_L_X88Y296 NE6BEG2 INT_R_X89Y300 NW6END2', 'INT_R_X89Y300 NE6BEG2 INT_L_X88Y304 NW6END2', 'INT_L_X88Y304 NE6BEG2 INT_R_X89Y308 NW6END2', 'INT_R_X89Y308 NE6BEG2 INT_L_X88Y312 NW6END2', 'INT_L_X88Y312 NE6BEG2 INT_R_X89Y316 NW6END2', 'INT_R_X89Y316 NE6BEG2 INT_L_X88Y320 NW6END2', 'INT_L_X88Y320 NE6BEG2 INT_R_X89Y324 NW6END2', 'INT_R_X89Y324 NE6BEG2 INT_L_X88Y328 NW6END2', 'INT_L_X88Y328 NE6BEG2 INT_R_X89Y332 NW6END2', 'INT_R_X89Y332 NE6BEG2 INT_L_X88Y336 NW6END2', 'INT_L_X88Y336 NE6BEG2 INT_R_X89Y340 NW6END2', 'INT_R_X89Y340 NE6BEG2 INT_L_X88Y344 NW6END2', 'INT_L_X88Y344 NN6BEG2 INT_L_X88Y349 SS6END1', 'INT_L_X88Y349 SE6BEG1 INT_R_X89Y345 SW6END1', 'INT_R_X89Y345 SE6BEG1 INT_L_X88Y341 SW6END1', 'INT_L_X88Y341 NW6BEG2 INT_L_X86Y345 NW6END2', 'INT_L_X86Y345 NN6BEG2 INT_L_X86Y348 SS6END1', 'INT_L_X86Y348 NW6BEG2 INT_L_X84Y347 SW6END1', 'INT_L_X84Y347 SE6BEG1 INT_L_X86Y343 SE6END1', 'INT_L_X86Y343 SE6BEG1 INT_L_X88Y339 SE6END1', 'INT_L_X88Y339 NE6BEG1 INT_R_X89Y343 NW6END1', 'INT_R_X89Y343 NN6BEG1 INT_R_X89Y349 NN6END1', 'INT_R_X89Y349 NW6BEG1 INT_R_X87Y346 SW6END2', 'INT_R_X87Y346 SE6BEG2 INT_R_X89Y342 SE6END2', 'INT_R_X89Y342 NE6BEG2 INT_L_X88Y346 NW6END2', 'INT_L_X88Y346 NN6BEG2 INT_L_X88Y347 SS6END1', 'INT_L_X88Y347 SE6BEG1 INT_R_X89Y343 SW6END1', 'INT_R_X89Y343 NW6BEG2 INT_R_X87Y347 NW6END2', 'INT_R_X87Y347 NN6BEG2 INT_R_X87Y346 SS6END1', 'INT_R_X87Y346 NW6BEG2 INT_R_X85Y349 SW6END1', 'INT_R_X85Y349 SE6BEG1 INT_R_X87Y345 SE6END1', 'INT_R_X87Y345 SE6BEG1 INT_R_X89Y341 SE6END1', 'INT_R_X89Y341 NE6BEG1 INT_L_X88Y345 NW6END1', 'INT_L_X88Y345 NN6BEG1 INT_L_X88Y348 SS6END2', 'INT_L_X88Y348 SE6BEG2 INT_R_X89Y344 SW6END2', 'INT_R_X89Y344 SE6BEG2 INT_L_X88Y340 SW6END2', 'INT_L_X88Y340 NW6BEG3 INT_L_X86Y344 NW6END3', 'INT_L_X86Y344 NW6BEG3 INT_L_X84Y348 NW6END3', 'INT_L_X84Y348 NE6BEG3 INT_L_X86Y347 SE6END0', 'INT_L_X86Y347 NE6BEG0 INT_L_X88Y348 SE6END3', 'INT_L_X88Y348 NE6BEG3 INT_R_X89Y347 SW6END0', 'INT_R_X89Y347 NW6BEG1 INT_R_X87Y348 SW6END2', 'INT_R_X87Y348 NW6BEG3 INT_R_X85Y347 SW6END0', 'INT_R_X85Y347 SE6BEG0 INT_R_X87Y343 SE6END0', 'INT_R_X87Y343 SE6BEG0 INT_R_X89Y339 SE6END0', 'INT_R_X89Y339 NN6BEG0 INT_R_X89Y345 NN6END0', 'INT_R_X89Y345 NE6BEG0 INT_L_X88Y349 NW6END0', 'INT_L_X88Y349 NE6BEG0 INT_R_X89Y346 SW6END3', 'INT_R_X89Y346 SE6BEG3 INT_L_X88Y342 SW6END3', 'INT_L_X88Y342 SE6BEG3 INT_R_X89Y338 SW6END3', 'INT_R_X89Y338 SE6BEG3 INT_L_X88Y334 SW6END3', 'INT_L_X88Y334 SE6BEG3 INT_R_X89Y330 SW6END3', 'INT_R_X89Y330 SE6BEG3 INT_L_X88Y326 SW6END3', 'INT_L_X88Y326 SE6BEG3 INT_R_X89Y322 SW6END3', 'INT_R_X89Y322 SE6BEG3 INT_L_X88Y318 SW6END3', 'INT_L_X88Y318 SE6BEG3 INT_R_X89Y314 SW6END3', 'INT_R_X89Y314 SE6BEG3 INT_L_X88Y310 SW6END3', 'INT_L_X88Y310 SE6BEG3 INT_R_X89Y306 SW6END3', 'INT_R_X89Y306 SE6BEG3 INT_L_X88Y302 SW6END3', 'INT_L_X88Y302 SE6BEG3 INT_R_X89Y298 SW6END3', 'INT_R_X89Y298 SE6BEG3 INT_L_X88Y294 SW6END3', 'INT_L_X88Y294 SE6BEG3 INT_R_X89Y290 SW6END3', 'INT_R_X89Y290 SE6BEG3 INT_L_X88Y286 SW6END3', 'INT_L_X88Y286 SE6BEG3 INT_R_X89Y282 SW6END3', 'INT_R_X89Y282 SE6BEG3 INT_L_X88Y278 SW6END3', 'INT_L_X88Y278 SE6BEG3 INT_R_X89Y274 SW6END3', 'INT_R_X89Y274 SE6BEG3 INT_L_X88Y270 SW6END3', 'INT_L_X88Y270 SE6BEG3 INT_R_X89Y266 SW6END3', 'INT_R_X89Y266 SE6BEG3 INT_L_X88Y262 SW6END3', 'INT_L_X88Y262 SE6BEG3 INT_R_X89Y258 SW6END3', 'INT_R_X89Y258 SE6BEG3 INT_L_X88Y254 SW6END3', 'INT_L_X88Y254 SE6BEG3 INT_R_X89Y250 SW6END3', 'INT_R_X89Y250 SE6BEG3 INT_L_X88Y246 SW6END3', 'INT_L_X88Y246 SE6BEG3 INT_R_X89Y242 SW6END3', 'INT_R_X89Y242 SE6BEG3 INT_L_X88Y238 SW6END3', 'INT_L_X88Y238 SE6BEG3 INT_R_X89Y234 SW6END3', 'INT_R_X89Y234 SE6BEG3 INT_L_X88Y230 SW6END3', 'INT_L_X88Y230 SE6BEG3 INT_R_X89Y226 SW6END3', 'INT_R_X89Y226 SE6BEG3 INT_L_X88Y222 SW6END3', 'INT_L_X88Y222 SE6BEG3 INT_R_X89Y218 SW6END3', 'INT_R_X89Y218 SE6BEG3 INT_L_X88Y214 SW6END3', 'INT_L_X88Y214 SE6BEG3 INT_R_X89Y210 SW6END3', 'INT_R_X89Y210 SE6BEG3 INT_L_X88Y206 SW6END3', 'INT_L_X88Y206 SE6BEG3 INT_R_X89Y202 SW6END3', 'INT_R_X89Y202 SE6BEG3 INT_L_X88Y198 SW6END3', 'INT_L_X88Y198 SE6BEG3 INT_R_X89Y194 SW6END3', 'INT_R_X89Y194 SE6BEG3 INT_L_X88Y190 SW6END3', 'INT_L_X88Y190 SE6BEG3 INT_R_X89Y186 SW6END3', 'INT_R_X89Y186 SE6BEG3 INT_L_X88Y182 SW6END3', 'INT_L_X88Y182 SE6BEG3 INT_R_X89Y178 SW6END3', 'INT_R_X89Y178 SE6BEG3 INT_L_X88Y174 SW6END3', 'INT_L_X88Y174 SE6BEG3 INT_R_X89Y170 SW6END3', 'INT_R_X89Y170 SE6BEG3 INT_L_X88Y166 SW6END3', 'INT_L_X88Y166 SE6BEG3 INT_R_X89Y162 SW6END3', 'INT_R_X89Y162 SE6BEG3 INT_L_X88Y158 SW6END3', 'INT_L_X88Y158 SE6BEG3 INT_R_X89Y154 SW6END3', 'INT_R_X89Y154 SE6BEG3 INT_L_X88Y150 SW6END3', 'INT_L_X88Y150 SE6BEG3 INT_L_X90Y146 SE6END3', 'INT_L_X90Y146 NE6BEG3 INT_L_X92Y149 SE6END0', 'INT_L_X92Y149 NE6BEG0 INT_L_X94Y146 SE6END3', 'INT_L_X94Y146 NE6BEG3 INT_R_X95Y149 SW6END0', 'INT_R_X95Y149 NW6BEG1 INT_R_X93Y146 SW6END2', 'INT_R_X93Y146 NW6BEG3 INT_R_X91Y149 SW6END0', 'INT_R_X91Y149 SE6BEG0 INT_R_X93Y145 SE6END0', 'INT_R_X93Y145 SE6BEG0 INT_R_X95Y141 SE6END0', 'INT_R_X95Y141 NN6BEG0 INT_R_X95Y147 NN6END0', 'INT_R_X95Y147 NE6BEG0 INT_L_X94Y148 SW6END3', 'INT_L_X94Y148 SE6BEG3 INT_R_X95Y144 SW6END3', 'INT_R_X95Y144 SE6BEG3 INT_L_X94Y140 SW6END3', 'INT_L_X94Y140 SE6BEG3 INT_R_X95Y136 SW6END3', 'INT_R_X95Y136 SE6BEG3 INT_L_X94Y132 SW6END3', 'INT_L_X94Y132 SE6BEG3 INT_R_X95Y128 SW6END3', 'INT_R_X95Y128 SE6BEG3 INT_L_X94Y124 SW6END3', 'INT_L_X94Y124 SE6BEG3 INT_R_X95Y120 SW6END3', 'INT_R_X95Y120 SE6BEG3 INT_L_X94Y116 SW6END3', 'INT_L_X94Y116 SE6BEG3 INT_R_X95Y112 SW6END3', 'INT_R_X95Y112 SE6BEG3 INT_L_X94Y108 SW6END3', 'INT_L_X94Y108 SE6BEG3 INT_R_X95Y104 SW6END3', 'INT_R_X95Y104 SE6BEG3 INT_L_X94Y100 SW6END3', 'INT_L_X94Y100 SE6BEG3 INT_R_X95Y96 SW6END3', 'INT_R_X95Y96 SE6BEG3 INT_L_X94Y92 SW6END3', 'INT_L_X94Y92 SE6BEG3 INT_R_X95Y88 SW6END3', 'INT_R_X95Y88 SE6BEG3 INT_L_X94Y84 SW6END3', 'INT_L_X94Y84 SE6BEG3 INT_R_X95Y80 SW6END3', 'INT_R_X95Y80 SE6BEG3 INT_L_X94Y76 SW6END3', 'INT_L_X94Y76 SE6BEG3 INT_R_X95Y72 SW6END3', 'INT_R_X95Y72 SE6BEG3 INT_L_X94Y68 SW6END3', 'INT_L_X94Y68 SE6BEG3 INT_R_X95Y64 SW6END3', 'INT_R_X95Y64 SE6BEG3 INT_L_X94Y60 SW6END3', 'INT_L_X94Y60 SE6BEG3 INT_R_X95Y56 SW6END3', 'INT_R_X95Y56 SE6BEG3 INT_L_X94Y52 SW6END3', 'INT_L_X94Y52 SE6BEG3 INT_R_X95Y48 SW6END3', 'INT_R_X95Y48 SE6BEG3 INT_L_X94Y44 SW6END3', 'INT_L_X94Y44 SE6BEG3 INT_R_X95Y40 SW6END3', 'INT_R_X95Y40 SE6BEG3 INT_L_X94Y36 SW6END3', 'INT_L_X94Y36 SE6BEG3 INT_R_X95Y32 SW6END3', 'INT_R_X95Y32 SE6BEG3 INT_L_X94Y28 SW6END3', 'INT_L_X94Y28 SE6BEG3 INT_R_X95Y24 SW6END3', 'INT_R_X95Y24 SE6BEG3 INT_L_X94Y20 SW6END3', 'INT_L_X94Y20 SE6BEG3 INT_R_X95Y16 SW6END3', 'INT_R_X95Y16 SE6BEG3 INT_L_X94Y12 SW6END3', 'INT_L_X94Y12 SE6BEG3 INT_R_X95Y8 SW6END3', 'INT_R_X95Y8 SE6BEG3 INT_L_X94Y4 SW6END3', 'INT_L_X94Y4 SS6BEG3 INT_L_X94Y1 NN6END0', 'INT_L_X94Y1 SE6BEG0 INT_R_X95Y2 NW6END3', 'INT_R_X95Y2 NE6BEG3 INT_L_X94Y6 NW6END3', 'INT_L_X94Y6 NE6BEG3 INT_R_X95Y10 NW6END3', 'INT_R_X95Y10 NE6BEG3 INT_L_X94Y14 NW6END3', 'INT_L_X94Y14 NE6BEG3 INT_R_X95Y18 NW6END3', 'INT_R_X95Y18 NE6BEG3 INT_L_X94Y22 NW6END3', 'INT_L_X94Y22 NE6BEG3 INT_R_X95Y26 NW6END3', 'INT_R_X95Y26 NE6BEG3 INT_L_X94Y30 NW6END3', 'INT_L_X94Y30 NE6BEG3 INT_R_X95Y34 NW6END3', 'INT_R_X95Y34 NE6BEG3 INT_L_X94Y38 NW6END3', 'INT_L_X94Y38 NE6BEG3 INT_R_X95Y42 NW6END3', 'INT_R_X95Y42 NE6BEG3 INT_L_X94Y46 NW6END3', 'INT_L_X94Y46 NE6BEG3 INT_R_X95Y50 NW6END3', 'INT_R_X95Y50 NE6BEG3 INT_L_X94Y54 NW6END3', 'INT_L_X94Y54 NE6BEG3 INT_R_X95Y58 NW6END3', 'INT_R_X95Y58 NE6BEG3 INT_L_X94Y62 NW6END3', 'INT_L_X94Y62 NE6BEG3 INT_R_X95Y66 NW6END3', 'INT_R_X95Y66 NE6BEG3 INT_L_X94Y70 NW6END3', 'INT_L_X94Y70 NE6BEG3 INT_R_X95Y74 NW6END3', 'INT_R_X95Y74 NE6BEG3 INT_L_X94Y78 NW6END3', 'INT_L_X94Y78 NE6BEG3 INT_R_X95Y82 NW6END3', 'INT_R_X95Y82 NE6BEG3 INT_L_X94Y86 NW6END3', 'INT_L_X94Y86 NE6BEG3 INT_R_X95Y90 NW6END3', 'INT_R_X95Y90 NE6BEG3 INT_L_X94Y94 NW6END3', 'INT_L_X94Y94 NE6BEG3 INT_R_X95Y98 NW6END3', 'INT_R_X95Y98 NE6BEG3 INT_L_X94Y102 NW6END3', 'INT_L_X94Y102 NE6BEG3 INT_R_X95Y106 NW6END3', 'INT_R_X95Y106 NE6BEG3 INT_L_X94Y110 NW6END3', 'INT_L_X94Y110 NE6BEG3 INT_R_X95Y114 NW6END3', 'INT_R_X95Y114 NE6BEG3 INT_L_X94Y118 NW6END3', 'INT_L_X94Y118 NE6BEG3 INT_R_X95Y122 NW6END3', 'INT_R_X95Y122 NE6BEG3 INT_L_X94Y126 NW6END3', 'INT_L_X94Y126 NE6BEG3 INT_R_X95Y130 NW6END3', 'INT_R_X95Y130 NE6BEG3 INT_L_X94Y134 NW6END3', 'INT_L_X94Y134 NE6BEG3 INT_R_X95Y138 NW6END3', 'INT_R_X95Y138 NE6BEG3 INT_L_X94Y142 NW6END3', 'INT_L_X94Y142 NE6BEG3 INT_R_X95Y146 NW6END3', 'INT_R_X95Y146 NE6BEG3 INT_L_X94Y149 SW6END0', 'INT_L_X94Y149 NW6BEG1 INT_L_X92Y146 SW6END2', 'INT_L_X92Y146 SE6BEG2 INT_L_X94Y142 SE6END2', 'INT_L_X94Y142 NE6BEG2 INT_R_X95Y146 NW6END2', 'INT_R_X95Y146 NN6BEG2 INT_R_X95Y147 SS6END1', 'INT_R_X95Y147 SE6BEG1 INT_L_X94Y143 SW6END1', 'INT_L_X94Y143 NW6BEG2 INT_L_X92Y147 NW6END2', 'INT_L_X92Y147 NN6BEG2 INT_L_X92Y146 SS6END1', 'INT_L_X92Y146 NW6BEG2 INT_L_X90Y149 SW6END1', 'INT_L_X90Y149 NW6BEG2 INT_L_X88Y153 NW6END2', 'INT_L_X88Y153 NE6BEG2 INT_R_X89Y157 NW6END2', 'INT_R_X89Y157 NE6BEG2 INT_L_X88Y161 NW6END2', 'INT_L_X88Y161 NE6BEG2 INT_R_X89Y165 NW6END2', 'INT_R_X89Y165 NE6BEG2 INT_L_X88Y169 NW6END2', 'INT_L_X88Y169 NE6BEG2 INT_R_X89Y173 NW6END2', 'INT_R_X89Y173 NE6BEG2 INT_L_X88Y177 NW6END2', 'INT_L_X88Y177 NE6BEG2 INT_R_X89Y181 NW6END2', 'INT_R_X89Y181 NE6BEG2 INT_L_X88Y185 NW6END2', 'INT_L_X88Y185 NE6BEG2 INT_R_X89Y189 NW6END2', 'INT_R_X89Y189 NE6BEG2 INT_L_X88Y193 NW6END2', 'INT_L_X88Y193 NE6BEG2 INT_R_X89Y197 NW6END2', 'INT_R_X89Y197 NE6BEG2 INT_L_X88Y201 NW6END2', 'INT_L_X88Y201 NE6BEG2 INT_R_X89Y205 NW6END2', 'INT_R_X89Y205 NE6BEG2 INT_L_X88Y209 NW6END2', 'INT_L_X88Y209 NE6BEG2 INT_R_X89Y213 NW6END2', 'INT_R_X89Y213 NE6BEG2 INT_L_X88Y217 NW6END2', 'INT_L_X88Y217 NE6BEG2 INT_R_X89Y221 NW6END2', 'INT_R_X89Y221 NE6BEG2 INT_L_X88Y225 NW6END2', 'INT_L_X88Y225 NE6BEG2 INT_R_X89Y229 NW6END2', 'INT_R_X89Y229 NE6BEG2 INT_L_X88Y233 NW6END2', 'INT_L_X88Y233 NE6BEG2 INT_R_X89Y237 NW6END2', 'INT_R_X89Y237 NE6BEG2 INT_L_X88Y241 NW6END2', 'INT_L_X88Y241 NE6BEG2 INT_R_X89Y245 NW6END2', 'INT_R_X89Y245 NE6BEG2 INT_L_X88Y249 NW6END2', 'INT_L_X88Y249 NE6BEG2 INT_R_X89Y253 NW6END2', 'INT_R_X89Y253 NE6BEG2 INT_L_X88Y257 NW6END2', 'INT_L_X88Y257 NE6BEG2 INT_R_X89Y261 NW6END2', 'INT_R_X89Y261 NE6BEG2 INT_L_X88Y265 NW6END2', 'INT_L_X88Y265 NE6BEG2 INT_R_X89Y269 NW6END2', 'INT_R_X89Y269 NE6BEG2 INT_L_X88Y273 NW6END2', 'INT_L_X88Y273 NE6BEG2 INT_R_X89Y277 NW6END2', 'INT_R_X89Y277 NE6BEG2 INT_L_X88Y281 NW6END2', 'INT_L_X88Y281 NE6BEG2 INT_R_X89Y285 NW6END2', 'INT_R_X89Y285 NE6BEG2 INT_L_X88Y289 NW6END2', 'INT_L_X88Y289 NE6BEG2 INT_R_X89Y293 NW6END2', 'INT_R_X89Y293 NE6BEG2 INT_L_X88Y297 NW6END2', 'INT_L_X88Y297 NE6BEG2 INT_R_X89Y301 NW6END2', 'INT_R_X89Y301 NE6BEG2 INT_L_X88Y305 NW6END2', 'INT_L_X88Y305 NE6BEG2 INT_R_X89Y309 NW6END2', 'INT_R_X89Y309 NE6BEG2 INT_L_X88Y313 NW6END2', 'INT_L_X88Y313 NE6BEG2 INT_R_X89Y317 NW6END2', 'INT_R_X89Y317 NE6BEG2 INT_L_X88Y321 NW6END2', 'INT_L_X88Y321 NE6BEG2 INT_R_X89Y325 NW6END2', 'INT_R_X89Y325 NE6BEG2 INT_L_X88Y329 NW6END2']
number=len(listpath)
with open('result', 'w') as f1:
    for i in range (0,number):
        if(i % 2 == 0):
            f1.write('  pip ')
            p = listpath[i].rfind(' INT')
            f1.write(listpath[i][p+1:])
            f1.write(' -> ')
        else:
            p = listpath[i].rfind(' INT')
            q = listpath[i].find(' ')
            f1.write(listpath[i][q+1:p])
            f1.write('\n')
'''
'''
start = 'INT_L_X2Y345 NW6BEG1 INT_L_X0Y349 NW6END1'
print("'"+start+"':1,")
print("'INT_L_X2Y345 NW6BEG1 INT_L_X0Y349 NW6END1':1,")
with open('flag','r') as f1:
    data = f1.read()

    for everyline in f1:
        everyline = everyline.rstrip()
        #print(everyline)
        if(everyline == "'"+ start +"':0,"):
            print(everyline)
            print("find ")

with open('flag','w') as f2:
    #new_data = data.replace("'INT_L_X2Y345 NW6BEG1 INT_L_X0Y349 NW6END1':1,","'INT_L_X2Y345 NW6BEG1 INT_L_X0Y349 NW6END1':0,")
    #print("'"+start+"':1,")
    new_data = data.replace("'"+start+"':0,","'"+start+"':1,")
    f2.write(new_data)
    
    
    
    
def DFS(start,end,listpath):
    print('listpath',listpath)
    list1 = []
    list2 = []
    if (start == end):
        return
    else:
        graph_start = []
        find_graph(start, graph_start)   #索引start的邻接点
        #print(start)
        #print('list',graph_start)
        for y in graph_start:  # 结点的相邻结点遍历
            flag_y = find_flag(y)     #查找节点的flag
            outdegree = find_outdegree(y)  # 寻找邻接点的出度，int类型
            #print(flag_y)
            #print(outdegree)
            if(y == end):        #如果邻接点中存在end，结束
                listpath.append(y)  #找到end对listpath中数据进行脚本处理
                number = len(listpath)
                with open('result', 'w') as f1:
                    for i in range(0, number):
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                return
            elif (flag_y != 0 and outdegree != 0):  # 寻找未遍历过的点
                #print(y)
                list1.append(y)  # start不包含终点的邻接点写入列表
                list2.append(outdegree)  # 邻接点的出度写入列表
        #print('list1', list1)
        #print('list2', list2)
        if (list1 == []):  # 找不到下一条路径
            list1empty(start, listpath, list1, list2)
            newstart = list1[0]
            listpath.append(newstart)
            DFS(newstart, end, listpath)
        else:
            max_outdegree = max(list2)  # 找出最大出度
            #print('4', max_outdegree)
            p = list2.index(max_outdegree)
            newstart = list1[p]    #最大度对应的点
            restart_n = len(listpath)
            if(restart_n % 400 == 0):     #listpath 长度每400个释放一次
                with open('result', 'w') as f1:
                    for i in range(0,400):    #将listpath 中元素写为脚本格式
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                listpath = []
                find_nextpath(start, newstart,listpath)
                DFS(newstart,end,listpath)
            else:
                # print('5', newstart)
                find_nextpath(start, newstart,listpath)
                DFS(newstart, end, listpath)


#在graph中查找邻接点并将邻接点加入列表graph_start
def find_graph(start,graph_start):
    import sys
    n1 = len(start)
    with open('graph', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == start):  # 找start的邻接点
                lastpart = everyline[n1 + 4:-2]  # 剩余格式'','',''
                #print(lastpart)
                # if ('INT' in lastpart):
                while ('INT' in lastpart):
                    if (',' in lastpart):
                        n2 = lastpart.index(',')
                        graph_start.append(lastpart[1:n2 - 1])
                        lastpart = lastpart[n2 + 1:]
                    else:
                        graph_start.append(lastpart[1:-1])
                        lastpart = 'empty'
                #print("asd",graph_start)
                return graph_start

#在flag中寻找对应的参数
def find_flag(y):
    import sys
    n1 = len(y)
    with open ('flag','r') as f1:
        for everyline in f1:
            everyline =everyline.rstrip()
            if (everyline[1:n1 +1] == y):
                flag_node = everyline[n1+3]  #读取文件中每个node的标记
                return flag_node

#在outdegree中查找对应的参数
def find_outdegree(y):
    import sys
    #print(y)
    n1 = len(y)
    with open('outdegree', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == y):  # 找start的邻接点
                outdegree_z = everyline[n1 + 3]
                outdegree_y = int(outdegree_z)
                #print('outdegree_node',outdegree_y)
                return outdegree_y

#对寻找到的新节点做处理
def find_nextpath(start,newstart,listpath):
    import sys
    listpath.append(newstart)  # 将节点最大度点插入路径
    lastoutdegree = find_outdegree(newstart)   #读取newstart点原始出度
    outdegree_newstart = lastoutdegree -1   #修改newstart出度
    with open ('outdegree','r') as f1:
        data = f1.read()
    with open ('outdegree','w') as f2:
        new_data = data.replace("'" + newstart + "':"+ str(lastoutdegree), "'" + start + "':"+ str(outdegree_newstart))
        f2.write(new_data)

    with open('flag', 'r') as f3:
        data = f3.read()
    with open('flag', 'w') as f4:
        new_data = data.replace("'" + newstart + "':1,", "'" + start + "':0,")
        f4.write(new_data)

#当寻找到的节点邻接点为空时进行处理
def list1empty(start,listpath,list1,list2):
    listpath.remove(start)  # 将空节点从listpath删掉
    newstart = listpath[-1]  # 重新遍历空节点的前一节点
    #print('6',newstart)
    graph_start=[]
    graph_newstart = find_graph(newstart,graph_start)
    #print('graph_newstart',graph_start)
    for y in graph_newstart:
        flag_y = find_flag(y)
        outdegree = find_outdegree(y)
        if (y != start and flag_y != 0 and outdegree != 0):  # 在前节点不包含空节点的邻接点中找下一路径
            list1.append(y)  # start不包含终点的邻接点写入列表
            list2.append(outdegree)  # 邻接点的出度写入列表
    #print('list1', list1)
    #print('list2', list2)
    #print('7', list1)
    if (list1 == []):  # 如果新节点除空节点外无其他节点，新节点也移除
        list1empty(newstart, listpath, list1, list2)
    else:
        return

#主函数
#flag['INT_R_X1Y349 SE6END0'] = 0   #将起始点标记为0
listpath1 = ['INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0']   #将起始点加入路径
#print('path',i)
#graph_start = []
#outdegree_y = 'null'
start = 'INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END01'
end = 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0'

DFS('INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0', 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0', listpath1)
q = listpath1.index('INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0')
print(q/2,'path1')
print(listpath1)


'''

#listpath=['INT_L_X88Y347 SE6BEG1 INT_R_X89Y343 SW6END1', 'INT_R_X89Y343 NW6BEG2 INT_R_X87Y347 NW6END2', 'INT_R_X87Y347 NN6BEG2 INT_R_X87Y346 SS6END1', 'INT_R_X87Y346 NW6BEG2 INT_R_X85Y349 SW6END1', 'INT_R_X85Y349 NW6BEG2 INT_R_X83Y346 SW6END1', 'INT_R_X83Y346 SE6BEG1 INT_R_X85Y342 SE6END1', 'INT_R_X85Y342 SE6BEG1 INT_R_X87Y338 SE6END1', 'INT_R_X87Y338 SE6BEG1 INT_R_X89Y334 SE6END1', 'INT_R_X89Y334 NE6BEG1 INT_L_X88Y338 NW6END1', 'INT_L_X88Y338 NN6BEG1 INT_L_X88Y344 NN6END1', 'INT_L_X88Y344 SE6BEG1 INT_R_X89Y340 SW6END1', 'INT_R_X89Y340 NW6BEG2 INT_R_X87Y344 NW6END2', 'INT_R_X87Y344 NE6BEG2 INT_R_X89Y348 NE6END2', 'INT_R_X89Y348 NW6BEG2 INT_R_X87Y347 SW6END1', 'INT_R_X87Y347 NW6BEG2 INT_R_X85Y348 SW6END1', 'INT_R_X85Y348 NW6BEG2 INT_R_X83Y347 SW6END1', 'INT_R_X83Y347 SE6BEG1 INT_R_X85Y343 SE6END1', 'INT_R_X85Y343 SE6BEG1 INT_R_X87Y339 SE6END1', 'INT_R_X87Y339 SE6BEG1 INT_R_X89Y335 SE6END1', 'INT_R_X89Y335 NE6BEG1 INT_L_X88Y339 NW6END1', 'INT_L_X88Y339 NN6BEG1 INT_L_X88Y345 NN6END1', 'INT_L_X88Y345 SE6BEG1 INT_R_X89Y341 SW6END1', 'INT_R_X89Y341 NW6BEG2 INT_R_X87Y345 NW6END2', 'INT_R_X87Y345 NE6BEG2 INT_R_X89Y349 NE6END2', 'INT_R_X89Y349 SE6BEG2 INT_L_X88Y345 SW6END2', 'INT_L_X88Y345 SE6BEG2 INT_R_X89Y341 SW6END2', 'INT_R_X89Y341 NW6BEG3 INT_R_X87Y345 NW6END3', 'INT_R_X87Y345 NE6BEG3 INT_R_X89Y349 NE6END3', 'INT_R_X89Y349 NN6BEG3 INT_R_X89Y344 SS6END0', 'INT_R_X89Y344 SS6BEG0 INT_R_X89Y338 SS6END0', 'INT_R_X89Y338 NW6BEG1 INT_R_X87Y342 NW6END1', 'INT_R_X87Y342 NE6BEG1 INT_R_X89Y346 NE6END1', 'INT_R_X89Y346 SE6BEG1 INT_L_X88Y342 SW6END1', 'INT_L_X88Y342 SE6BEG1 INT_R_X89Y338 SW6END1', 'INT_R_X89Y338 NW6BEG2 INT_R_X87Y342 NW6END2', 'INT_R_X87Y342 NE6BEG2 INT_R_X89Y346 NE6END2', 'INT_R_X89Y346 SE6BEG2 INT_L_X88Y342 SW6END2', 'INT_L_X88Y342 NW6BEG3 INT_L_X86Y346 NW6END3', 'INT_L_X86Y346 NE6BEG3 INT_L_X88Y349 SE6END0', 'INT_L_X88Y349 SS6BEG0 INT_L_X88Y343 SS6END0', 'INT_L_X88Y343 SE6BEG0 INT_R_X89Y339 SW6END0', 'INT_R_X89Y339 NW6BEG1 INT_R_X87Y343 NW6END1', 'INT_R_X87Y343 NE6BEG1 INT_R_X89Y347 NE6END1', 'INT_R_X89Y347 SE6BEG1 INT_L_X88Y343 SW6END1', 'INT_L_X88Y343 SE6BEG1 INT_R_X89Y339 SW6END1', 'INT_R_X89Y339 NW6BEG2 INT_R_X87Y343 NW6END2', 'INT_R_X87Y343 NE6BEG2 INT_R_X89Y347 NE6END2', 'INT_R_X89Y347 SE6BEG2 INT_L_X88Y343 SW6END2', 'INT_L_X88Y343 NW6BEG3 INT_L_X86Y347 NW6END3', 'INT_L_X86Y347 NE6BEG3 INT_L_X88Y348 SE6END0', 'INT_L_X88Y348 SS6BEG0 INT_L_X88Y342 SS6END0', 'INT_L_X88Y342 SE6BEG0 INT_R_X89Y338 SW6END0', 'INT_R_X89Y338 SE6BEG0 INT_L_X88Y334 SW6END0', 'INT_L_X88Y334 NW6BEG1 INT_L_X86Y338 NW6END1', 'INT_L_X86Y338 NW6BEG1 INT_L_X84Y342 NW6END1', 'INT_L_X84Y342 NW6BEG1 INT_L_X82Y346 NW6END1', 'INT_L_X82Y346 NE6BEG1 INT_L_X84Y349 SE6END2', 'INT_L_X84Y349 NN6BEG2 INT_L_X84Y344 SS6END1', 'INT_L_X84Y344 NW6BEG2 INT_L_X82Y348 NW6END2', 'INT_L_X82Y348 NE6BEG2 INT_L_X84Y347 SE6END1', 'INT_L_X84Y347 NN6BEG1 INT_L_X84Y346 SS6END2', 'INT_L_X84Y346 NW6BEG3 INT_L_X82Y349 SW6END0', 'INT_L_X82Y349 SE6BEG0 INT_L_X84Y345 SE6END0', 'INT_L_X84Y345 SE6BEG0 INT_L_X86Y341 SE6END0', 'INT_L_X86Y341 SE6BEG0 INT_L_X88Y337 SE6END0', 'INT_L_X88Y337 NN6BEG0 INT_L_X88Y343 NN6END0', 'INT_L_X88Y343 NE6BEG0 INT_R_X89Y347 NW6END0', 'INT_R_X89Y347 NE6BEG0 INT_L_X88Y348 SW6END3', 'INT_L_X88Y348 SE6BEG3 INT_R_X89Y344 SW6END3', 'INT_R_X89Y344 SE6BEG3 INT_L_X88Y340 SW6END3', 'INT_L_X88Y340 SE6BEG3 INT_R_X89Y336 SW6END3', 'INT_R_X89Y336 SE6BEG3 INT_L_X88Y332 SW6END3', 'INT_L_X88Y332 SE6BEG3 INT_R_X89Y328 SW6END3', 'INT_R_X89Y328 SE6BEG3 INT_L_X88Y324 SW6END3', 'INT_L_X88Y324 SE6BEG3 INT_R_X89Y320 SW6END3', 'INT_R_X89Y320 SE6BEG3 INT_L_X88Y316 SW6END3', 'INT_L_X88Y316 SE6BEG3 INT_R_X89Y312 SW6END3', 'INT_R_X89Y312 SE6BEG3 INT_L_X88Y308 SW6END3', 'INT_L_X88Y308 SE6BEG3 INT_R_X89Y304 SW6END3', 'INT_R_X89Y304 SE6BEG3 INT_L_X88Y300 SW6END3', 'INT_L_X88Y300 SE6BEG3 INT_R_X89Y296 SW6END3', 'INT_R_X89Y296 SE6BEG3 INT_L_X88Y292 SW6END3', 'INT_L_X88Y292 SE6BEG3 INT_R_X89Y288 SW6END3', 'INT_R_X89Y288 SE6BEG3 INT_L_X88Y284 SW6END3', 'INT_L_X88Y284 SE6BEG3 INT_R_X89Y280 SW6END3', 'INT_R_X89Y280 SE6BEG3 INT_L_X88Y276 SW6END3', 'INT_L_X88Y276 SE6BEG3 INT_R_X89Y272 SW6END3', 'INT_R_X89Y272 SE6BEG3 INT_L_X88Y268 SW6END3', 'INT_L_X88Y268 SE6BEG3 INT_R_X89Y264 SW6END3', 'INT_R_X89Y264 SE6BEG3 INT_L_X88Y260 SW6END3', 'INT_L_X88Y260 SE6BEG3 INT_R_X89Y256 SW6END3', 'INT_R_X89Y256 SE6BEG3 INT_L_X88Y252 SW6END3', 'INT_L_X88Y252 SE6BEG3 INT_R_X89Y248 SW6END3', 'INT_R_X89Y248 SE6BEG3 INT_L_X88Y244 SW6END3', 'INT_L_X88Y244 SE6BEG3 INT_R_X89Y240 SW6END3', 'INT_R_X89Y240 SE6BEG3 INT_L_X88Y236 SW6END3', 'INT_L_X88Y236 SE6BEG3 INT_R_X89Y232 SW6END3', 'INT_R_X89Y232 SE6BEG3 INT_L_X88Y228 SW6END3', 'INT_L_X88Y228 SE6BEG3 INT_R_X89Y224 SW6END3', 'INT_R_X89Y224 SE6BEG3 INT_L_X88Y220 SW6END3', 'INT_L_X88Y220 SE6BEG3 INT_R_X89Y216 SW6END3', 'INT_R_X89Y216 SE6BEG3 INT_L_X88Y212 SW6END3', 'INT_L_X88Y212 SE6BEG3 INT_R_X89Y208 SW6END3', 'INT_R_X89Y208 SE6BEG3 INT_L_X88Y204 SW6END3', 'INT_L_X88Y204 SE6BEG3 INT_R_X89Y200 SW6END3', 'INT_R_X89Y200 SE6BEG3 INT_L_X88Y196 SW6END3', 'INT_L_X88Y196 SE6BEG3 INT_R_X89Y192 SW6END3', 'INT_R_X89Y192 SE6BEG3 INT_L_X88Y188 SW6END3', 'INT_L_X88Y188 SE6BEG3 INT_R_X89Y184 SW6END3', 'INT_R_X89Y184 SE6BEG3 INT_L_X88Y180 SW6END3', 'INT_L_X88Y180 SE6BEG3 INT_R_X89Y176 SW6END3', 'INT_R_X89Y176 SE6BEG3 INT_L_X88Y172 SW6END3', 'INT_L_X88Y172 SE6BEG3 INT_R_X89Y168 SW6END3', 'INT_R_X89Y168 SE6BEG3 INT_L_X88Y164 SW6END3', 'INT_L_X88Y164 SE6BEG3 INT_R_X89Y160 SW6END3', 'INT_R_X89Y160 SE6BEG3 INT_L_X88Y156 SW6END3', 'INT_L_X88Y156 SE6BEG3 INT_R_X89Y152 SW6END3', 'INT_R_X89Y152 SE6BEG3 INT_L_X88Y148 SW6END3', 'INT_L_X88Y148 SE6BEG3 INT_L_X90Y144 SE6END3', 'INT_L_X90Y144 SE6BEG3 INT_L_X92Y140 SE6END3', 'INT_L_X92Y140 SE6BEG3 INT_L_X94Y136 SE6END3', 'INT_L_X94Y136 NE6BEG3 INT_R_X95Y140 NW6END3', 'INT_R_X95Y140 NE6BEG3 INT_L_X94Y144 NW6END3', 'INT_L_X94Y144 NE6BEG3 INT_R_X95Y148 NW6END3', 'INT_R_X95Y148 NE6BEG3 INT_L_X94Y147 SW6END0', 'INT_L_X94Y147 NW6BEG1 INT_L_X92Y148 SW6END2', 'INT_L_X92Y148 SE6BEG2 INT_L_X94Y144 SE6END2', 'INT_L_X94Y144 NE6BEG2 INT_R_X95Y148 NW6END2', 'INT_R_X95Y148 NN6BEG2 INT_R_X95Y145 SS6END1', 'INT_R_X95Y145 NW6BEG2 INT_R_X93Y149 NW6END2', 'INT_R_X93Y149 NN6BEG2 INT_R_X93Y144 SS6END1', 'INT_R_X93Y144 NW6BEG2 INT_R_X91Y148 NW6END2', 'INT_R_X91Y148 NE6BEG2 INT_R_X93Y147 SE6END1', 'INT_R_X93Y147 NN6BEG1 INT_R_X93Y146 SS6END2', 'INT_R_X93Y146 SE6BEG2 INT_R_X95Y142 SE6END2', 'INT_R_X95Y142 NE6BEG2 INT_L_X94Y146 NW6END2', 'INT_L_X94Y146 NN6BEG2 INT_L_X94Y147 SS6END1', 'INT_L_X94Y147 NW6BEG2 INT_L_X92Y148 SW6END1', 'INT_L_X92Y148 NW6BEG2 INT_L_X90Y147 SW6END1', 'INT_L_X90Y147 NW6BEG2 INT_L_X88Y151 NW6END2', 'INT_L_X88Y151 NE6BEG2 INT_R_X89Y155 NW6END2', 'INT_R_X89Y155 NE6BEG2 INT_L_X88Y159 NW6END2', 'INT_L_X88Y159 NE6BEG2 INT_R_X89Y163 NW6END2', 'INT_R_X89Y163 NE6BEG2 INT_L_X88Y167 NW6END2', 'INT_L_X88Y167 NE6BEG2 INT_R_X89Y171 NW6END2', 'INT_R_X89Y171 NE6BEG2 INT_L_X88Y175 NW6END2', 'INT_L_X88Y175 NE6BEG2 INT_R_X89Y179 NW6END2', 'INT_R_X89Y179 NE6BEG2 INT_L_X88Y183 NW6END2', 'INT_L_X88Y183 NE6BEG2 INT_R_X89Y187 NW6END2', 'INT_R_X89Y187 NE6BEG2 INT_L_X88Y191 NW6END2', 'INT_L_X88Y191 NE6BEG2 INT_R_X89Y195 NW6END2', 'INT_R_X89Y195 NE6BEG2 INT_L_X88Y199 NW6END2', 'INT_L_X88Y199 NE6BEG2 INT_R_X89Y203 NW6END2', 'INT_R_X89Y203 NE6BEG2 INT_L_X88Y207 NW6END2', 'INT_L_X88Y207 NE6BEG2 INT_R_X89Y211 NW6END2', 'INT_R_X89Y211 NE6BEG2 INT_L_X88Y215 NW6END2', 'INT_L_X88Y215 NE6BEG2 INT_R_X89Y219 NW6END2', 'INT_R_X89Y219 NE6BEG2 INT_L_X88Y223 NW6END2', 'INT_L_X88Y223 NE6BEG2 INT_R_X89Y227 NW6END2', 'INT_R_X89Y227 NE6BEG2 INT_L_X88Y231 NW6END2', 'INT_L_X88Y231 NE6BEG2 INT_R_X89Y235 NW6END2', 'INT_R_X89Y235 NE6BEG2 INT_L_X88Y239 NW6END2', 'INT_L_X88Y239 NE6BEG2 INT_R_X89Y243 NW6END2', 'INT_R_X89Y243 NE6BEG2 INT_L_X88Y247 NW6END2', 'INT_L_X88Y247 NE6BEG2 INT_R_X89Y251 NW6END2', 'INT_R_X89Y251 NE6BEG2 INT_L_X88Y255 NW6END2', 'INT_L_X88Y255 NE6BEG2 INT_R_X89Y259 NW6END2', 'INT_R_X89Y259 NE6BEG2 INT_L_X88Y263 NW6END2', 'INT_L_X88Y263 NE6BEG2 INT_R_X89Y267 NW6END2', 'INT_R_X89Y267 NE6BEG2 INT_L_X88Y271 NW6END2', 'INT_L_X88Y271 NE6BEG2 INT_R_X89Y275 NW6END2', 'INT_R_X89Y275 NE6BEG2 INT_L_X88Y279 NW6END2', 'INT_L_X88Y279 NE6BEG2 INT_R_X89Y283 NW6END2', 'INT_R_X89Y283 NE6BEG2 INT_L_X88Y287 NW6END2', 'INT_L_X88Y287 NE6BEG2 INT_R_X89Y291 NW6END2', 'INT_R_X89Y291 NE6BEG2 INT_L_X88Y295 NW6END2', 'INT_L_X88Y295 NE6BEG2 INT_R_X89Y299 NW6END2', 'INT_R_X89Y299 NE6BEG2 INT_L_X88Y303 NW6END2', 'INT_L_X88Y303 NE6BEG2 INT_R_X89Y307 NW6END2', 'INT_R_X89Y307 NE6BEG2 INT_L_X88Y311 NW6END2', 'INT_L_X88Y311 NE6BEG2 INT_R_X89Y315 NW6END2', 'INT_R_X89Y315 NE6BEG2 INT_L_X88Y319 NW6END2', 'INT_L_X88Y319 NE6BEG2 INT_R_X89Y323 NW6END2', 'INT_R_X89Y323 NE6BEG2 INT_L_X88Y327 NW6END2', 'INT_L_X88Y327 NE6BEG2 INT_R_X89Y331 NW6END2', 'INT_R_X89Y331 NE6BEG2 INT_L_X88Y335 NW6END2', 'INT_L_X88Y335 NW6BEG2 INT_L_X86Y339 NW6END2', 'INT_L_X86Y339 NW6BEG2 INT_L_X84Y343 NW6END2', 'INT_L_X84Y343 NW6BEG2 INT_L_X82Y347 NW6END2', 'INT_L_X82Y347 NE6BEG2 INT_L_X84Y348 SE6END1', 'INT_L_X84Y348 NE6BEG1 INT_L_X86Y347 SE6END2']


# 第一条路径
def DFS(start,end,listpath):
    while(start != end):  #start≠end时循环
        #print('listpath', listpath)
        list1 = []
        list2 = []
        graph_start = []
        find_graph(start, graph_start)  # 索引start的邻接点
        # print(start)
        # print('list',graph_start)
        for y in graph_start:  #寻找有用的邻接点
            flag_y = find_flag(y)  # 查找节点的flag
            outdegree = find_outdegree(y)  # 寻找邻接点的出度，int类型
            # print(flag_y)
            # print(outdegree)
            if (y == end):  # 如果邻接点中存在end，结束
                listpath.append(y)  # 找到end对listpath中数据进行脚本处理
                number = len(listpath)
                with open('result', 'a') as f1:
                    for i in range(0, number):
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                break

            elif (flag_y != 0 and outdegree != 0):  # 寻找未遍历过的点
                # print(y)
                list1.append(y)  # start不包含终点的邻接点写入列表
                list2.append(outdegree)  # 邻接点的出度写入列表
        # print('list1', list1)
        # print('list2', list2)
        if (list1 == []):  # 找不到下一条路径
            list1empty(start, listpath, list1, list2)
            newstart = list1[0]
            listpath.append(newstart)
            DFS(newstart, end, listpath)
        else:
            max_outdegree = max(list2)  # 找出最大出度
            # print('4', max_outdegree)
            p = list2.index(max_outdegree)
            newstart = list1[p]  # 最大度对应的点
            restart_n = len(listpath)
            if (restart_n % 400 == 0):  # listpath 长度每400个释放一次
                with open('result', 'a') as f1:
                    for i in range(0, 400):  # 将listpath 中元素写为脚本格式
                        if (i % 2 == 0):
                            f1.write('  pip ')
                            p = listpath[i].rfind(' INT')
                            f1.write(listpath[i][p + 1:])
                            f1.write(' -> ')
                        else:
                            p = listpath[i].rfind(' INT')
                            q = listpath[i].find(' ')
                            f1.write(listpath[i][q + 1:p])
                            f1.write('\n')
                listpath = []
                find_nextpath(start, newstart, listpath)
                start = newstart
            else:
                # print('5', newstart)
                find_nextpath(start, newstart, listpath)
                start = newstart



#在graph中查找邻接点并将邻接点加入列表graph_start
def find_graph(start,graph_start):
    import sys
    n1 = len(start)
    with open('graph', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == start):  # 找start的邻接点
                lastpart = everyline[n1 + 4:-2]  # 剩余格式'','',''
                #print(lastpart)
                # if ('INT' in lastpart):
                while ('INT' in lastpart):
                    if (',' in lastpart):
                        n2 = lastpart.index(',')
                        graph_start.append(lastpart[1:n2 - 1])
                        lastpart = lastpart[n2 + 1:]
                    else:
                        graph_start.append(lastpart[1:-1])
                        lastpart = 'empty'
                #print("asd",graph_start)
                return graph_start

#在flag中寻找对应的参数
def find_flag(y):
    import sys
    n1 = len(y)
    with open ('flag','r') as f1:
        for everyline in f1:
            everyline =everyline.rstrip()
            if (everyline[1:n1 +1] == y):
                flag_node = everyline[n1+3]  #读取文件中每个node的标记
                return flag_node

#在outdegree中查找对应的参数
def find_outdegree(y):
    import sys
    #print(y)
    n1 = len(y)
    with open('outdegree', 'r') as f1:
        for everyline in f1:
            everyline = everyline.rstrip()
            # print(everyline[1:n1+2])
            if (everyline[1:n1 + 1] == y):  # 找start的邻接点
                outdegree_z = everyline[n1 + 3]
                outdegree_y = int(outdegree_z)
                #print('outdegree_node',outdegree_y)
                return outdegree_y

#对寻找到的新节点做处理
def find_nextpath(start,newstart,listpath):
    import sys
    listpath.append(newstart)  # 将节点最大度点插入路径
    lastoutdegree = find_outdegree(newstart)   #读取newstart点原始出度
    outdegree_newstart = lastoutdegree -1   #newstart出度-1
    with open ('outdegree','r') as f1:
        data = f1.read()
    with open ('outdegree','w') as f2:
        new_data = data.replace("'" + newstart + "':"+ str(lastoutdegree), "'" + start + "':"+ str(outdegree_newstart))
        f2.write(new_data)

    with open('flag', 'r') as f3:  #newstart标记-1
        data = f3.read()
    with open('flag', 'w') as f4:
        new_data = data.replace("'" + newstart + "':1,", "'" + start + "':0,")
        f4.write(new_data)
        return listpath

#当寻找到的节点邻接点为空时进行处理
def list1empty(start,listpath,list1,list2):
    listpath.remove(start)  # 将空节点从listpath删掉
    newstart = listpath[-1]  # 重新遍历空节点的前一节点
    #print('6',newstart)
    graph_start=[]
    graph_newstart = find_graph(newstart,graph_start)
    #print('graph_newstart',graph_start)
    for y in graph_newstart:
        flag_y = find_flag(y)
        outdegree = find_outdegree(y)
        if (y != start and flag_y != 0 and outdegree != 0):  # 在前节点不包含空节点的邻接点中找下一路径
            list1.append(y)  # start不包含终点的邻接点写入列表
            list2.append(outdegree)  # 邻接点的出度写入列表
    #print('list1', list1)
    #print('list2', list2)
    #print('7', list1)
    if (list1 == []):  # 如果新节点除空节点外无其他节点，新节点也移除
        list1empty(newstart, listpath, list1, list2)
    else:
        return list1,list2

#主函数
#flag['INT_R_X1Y349 SE6END0'] = 0   #将起始点标记为0
listpath1 = ['INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0']   #将起始点加入路径
#print('path',i)
#graph_start = []
#outdegree_y = 'null'
start = 'INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END01'
end = 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0'
DFS('INT_L_X0Y186 NN6BEG0 INT_L_X0Y192 NN6END0', 'INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0', listpath1)

q = listpath1.index('INT_L_X0Y184 NN6BEG0 INT_L_X0Y190 NN6END0')
print(q/2,'path1')
print(listpath1)




